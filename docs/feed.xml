<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2020-09-14T08:30:03+01:00</updated><id>/feed.xml</id><title type="html">Cameron Harper</title><author><name>Cameron Harper</name></author><entry><title type="html">Running LDL on the CMWX1ZZABZ in MBED</title><link href="/2020/09/13/updated-mbed-ldl.html" rel="alternate" type="text/html" title="Running LDL on the CMWX1ZZABZ in MBED" /><published>2020-09-13T00:00:00+01:00</published><updated>2020-09-13T00:00:00+01:00</updated><id>/2020/09/13/updated-mbed-ldl</id><content type="html" xml:base="/2020/09/13/updated-mbed-ldl.html">&lt;p&gt;Version 0.4.0 of &lt;a href=&quot;https://github.com/cjhdev/lora_device_lib&quot;&gt;LDL&lt;/a&gt; has been
released and it includes an updated MBED wrapper with support
for &lt;a href=&quot;https://wireless.murata.com/type-abz-078.html&quot;&gt;CMWX1ZZABZ&lt;/a&gt; based hardware.&lt;/p&gt;

&lt;p&gt;The CMWX1ZZABZ module combines:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SX1276 transceiver&lt;/li&gt;
  &lt;li&gt;three IO lines for RF switching (RFI, RFO, PA_BOOST)&lt;/li&gt;
  &lt;li&gt;TCXO with power on/off control&lt;/li&gt;
  &lt;li&gt;a STM32L072CZ MCU (192K flash, 20K RAM)&lt;/li&gt;
  &lt;li&gt;32768Hz XTAL for the MCU&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to evaluate this module on MBED the best development kit in my
opinion is the &lt;a href=&quot;https://os.mbed.com/platforms/ST-Discovery-LRWAN1/&quot;&gt;DISCO_L072CZ_LRWAN1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lrwan1_kit_small.jpg&quot; alt=&quot;B-L072Z-LRWAN1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This post shows how to use LDL 0.4.0 on MBED with the DISCO_L072CZ_LRWAN1 development kit. It
also points out some noteworthy practical features of the wrapper.&lt;/p&gt;

&lt;h2 id=&quot;importing-the-wrapper&quot;&gt;Importing the Wrapper&lt;/h2&gt;

&lt;p&gt;The wrapper can be added to a project with the following mbed-cli command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &amp;lt;your mbed project&amp;gt;
mbed add https://github.com/cjhdev/lora_device_lib&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The wrapper source is not in the root of the LDL repository but MBED will
find it without any special steps.&lt;/p&gt;

&lt;h2 id=&quot;demo-app&quot;&gt;Demo App&lt;/h2&gt;

&lt;p&gt;This demo is much like every other I have written for LDL. It performs
over-the-air-activation before
dropping into a loop that uses a data service to send “hello world” as
often as possible.&lt;/p&gt;

&lt;p&gt;This app must be compiled using the MBED &lt;a href=&quot;https://os.mbed.com/docs/mbed-os/v6.2/bare-metal/index.html&quot;&gt;bare-metal profile&lt;/a&gt;
since the RTOS profile doesn’t work so well when you only have 20K of RAM.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* mapping suitable for DISCO_L072CZ_LRWAN1 */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &quot;mbed_ldl.h&quot;
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SPI&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;spi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PA_7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PA_6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PB_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMWX1ZZABZ&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;radio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;spi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PA_15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// nss&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PC_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// reset&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PB_4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PB_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// DIO0, DIO1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PC_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// enable_boost&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PC_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// enable_rfo&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PA_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// enable_rfi&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PA_12&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// enable_tcxo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MBED_CONF_APP_APP_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nwk_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MBED_CONF_APP_NWK_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultSM&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nwk_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dev_eui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MBED_CONF_APP_DEV_EUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;join_eui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MBED_CONF_APP_JOIN_EUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultStore&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev_eui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;join_eui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;EventQueue&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAC&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LDL_EU_863_870&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(;;){&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;n&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unconfirmed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

                &lt;span class=&quot;n&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;otaa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;configuration-file-mbed_appjson&quot;&gt;Configuration File (mbed_app.json)&lt;/h2&gt;

&lt;p&gt;I’ve used the configuration file to define EUIs, define keys, and
enable tracing. The LDL wrapper itself doesn’t require you to define
anything in the configuration file. I’m defining keys and EUIs here because it’s
convenient.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;requires&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bare-metal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ldl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;events&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mbed-trace&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;config&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;app_key&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;nwk_key&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;join_eui&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{0,0,0,0,0,0,0,3}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dev_eui&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{0,0,0,0,0,0,0,4}&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;target_overrides&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;platform.stdio-baud-rate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;target.c_lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;small&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;mbed-trace.enable&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;DISCO_L072CZ_LRWAN1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ldl.default-rate&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;noteworthy-features&quot;&gt;Noteworthy Features&lt;/h2&gt;

&lt;h3 id=&quot;radio-driver-subclassing&quot;&gt;Radio Driver Subclassing&lt;/h3&gt;

&lt;p&gt;The LDL wrapper lets the developer implement accessory IO
by way of subclassing the basic radio driver.&lt;/p&gt;

&lt;p&gt;In the case of the CMWX1ZZABZ module there are four accessory IO lines that
have nothing to do with the SX1276 driver:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;TCXO on/off&lt;/li&gt;
  &lt;li&gt;receive enable&lt;/li&gt;
  &lt;li&gt;RFO enable&lt;/li&gt;
  &lt;li&gt;Boost enable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The LDL::CMWX1ZZABZ class is able to handle these lines correctly without
any changes being made to the common driver code.&lt;/p&gt;

&lt;h3 id=&quot;security-module-subclassing&quot;&gt;Security Module Subclassing&lt;/h3&gt;

&lt;p&gt;Developers with particular security requirements (e.g. a requirement to use a security chip) can implement them by subclassing
the abstract security module (LDL::SM).&lt;/p&gt;

&lt;p&gt;The LDL::DefaultSM subclass is provided for demo apps like the one in this
post.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MBED_CONF_APP_APP_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nwk_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MBED_CONF_APP_NWK_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultSM&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nwk_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;It uses the cryptographic code packaged with LDL&lt;/li&gt;
  &lt;li&gt;It is constructed with pointers to the root keys&lt;/li&gt;
  &lt;li&gt;It stores derived keys in volatile memory&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;data-store-subclassing&quot;&gt;Data Store Subclassing&lt;/h3&gt;

&lt;p&gt;LoRaWAN devices need to persist counters, identifiers, and session state.
Developers with particular storage requirements can implement them
by subclassing the abstract data store (LDL::Store).&lt;/p&gt;

&lt;p&gt;The LDL::DefaultStore subclass is provided for demo apps like this one
in this post.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dev_eui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MBED_CONF_APP_DEV_EUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;join_eui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MBED_CONF_APP_JOIN_EUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultStore&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev_eui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;join_eui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;you pass it the identifiers in the constructor&lt;/li&gt;
  &lt;li&gt;it stores devNonce and joinNonce in volatile memory&lt;/li&gt;
  &lt;li&gt;it doesn’t store session&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;compiled-size&quot;&gt;Compiled Size&lt;/h2&gt;

&lt;p&gt;Using arm-none-eabi-gcc 8.28 and the debug bare-metal profile:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;| Module                   |     .text |   .data |     .bss |
|--------------------------|-----------|---------|----------|
| [fill]                   |    90(+0) |   0(+0) |   23(+0) |
| [lib]/c_nano.a           |  5074(+0) | 100(+0) |   21(+0) |
| [lib]/gcc.a              |  1996(+0) |   0(+0) |    0(+0) |
| [lib]/misc               |   200(+0) |   4(+0) |   28(+0) |
| [lib]/nosys.a            |    32(+0) |   0(+0) |    0(+0) |
| lora_device_lib/src      | 19502(+0) |   0(+0) |    0(+0) |
| lora_device_lib/wrappers |  4002(+0) |   0(+0) |    0(+0) |
| main.o                   |   472(+0) |   0(+0) | 1744(+0) |
| mbed-os/drivers          |  1568(+0) |   0(+0) |  532(+0) |
| mbed-os/events           |  1698(+0) |   0(+0) |    0(+0) |
| mbed-os/features         |  1188(+0) |  64(+0) |    0(+0) |
| mbed-os/hal              |  2122(+0) |   8(+0) |  130(+0) |
| mbed-os/platform         |  6166(+0) | 260(+0) |  428(+0) |
| mbed-os/rtos             |   332(+0) |   0(+0) |    0(+0) |
| mbed-os/targets          | 14926(+0) |   4(+0) | 1230(+0) |
| Subtotals                | 59368(+0) | 440(+0) | 4136(+0) |
Total Static RAM memory (data + bss): 4576(+0) bytes
Total Flash memory (text + data): 59808(+0) bytes&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Cameron Harper</name></author><summary type="html">Version 0.4.0 of LDL has been released and it includes an updated MBED wrapper with support for CMWX1ZZABZ based hardware.</summary></entry><entry><title type="html">LDL vs. LoRaMac-Node: Size and Complexity</title><link href="/2019/12/11/comparing-ldl-to-loramac.html" rel="alternate" type="text/html" title="LDL vs. LoRaMac-Node: Size and Complexity" /><published>2019-12-11T00:00:00+00:00</published><updated>2019-12-11T00:00:00+00:00</updated><id>/2019/12/11/comparing-ldl-to-loramac</id><content type="html" xml:base="/2019/12/11/comparing-ldl-to-loramac.html">&lt;p&gt;In this post I compare the apparent &lt;a href=&quot;https://en.wikipedia.org/wiki/Cyclomatic_complexity&quot;&gt;cyclomatic complexity&lt;/a&gt; and compiled
size of two LoRaWAN implementations: LDL and LoRaMac-Node.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cjhdev/lora_device_lib&quot;&gt;LDL&lt;/a&gt; is my own implementation. &lt;a href=&quot;https://github.com/Lora-net/LoRaMac-node&quot;&gt;LoRaMac-Node&lt;/a&gt; 
appears to be a Semtech sponsored LoRaWAN reference implementation.&lt;/p&gt;

&lt;p&gt;LoRaMac-Node has been around for a while and is probably a sensible choice for 
commercial projects. LDL is experimental and should not be trusted.&lt;/p&gt;

&lt;h2 id=&quot;method&quot;&gt;Method&lt;/h2&gt;

&lt;p&gt;The comparison is between LDL &lt;a href=&quot;https://github.com/cjhdev/lora_device_lib/releases/tag/0.2.3&quot;&gt;0.2.3&lt;/a&gt;
and LoRaMac-Node &lt;a href=&quot;https://github.com/Lora-net/LoRaMac-node/releases/tag/v4.4.2&quot;&gt;4.4.2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Source to be compared is grouped into one of three domains:&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;Domain Definitions&lt;/caption&gt;
    &lt;theader&gt;
        &lt;tr&gt;
            &lt;th&gt;Domain&lt;/th&gt;
            &lt;th&gt;Description&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;Region&lt;/td&gt;
            &lt;td&gt;region specific features&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Radio&lt;/td&gt;
            &lt;td&gt;radio drivers&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;MAC&lt;/td&gt;
            &lt;td&gt;all platform agnostic code which does not fall into the region or radio domains, excluding cryptographic modes&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The following source files are selected from each project for each domain:&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;Radio Domain Files&lt;/caption&gt;
    &lt;theader&gt;
        &lt;tr&gt;
            &lt;th&gt;LDL&lt;/th&gt;
            &lt;th&gt;LoRaMac-Node&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;ldl_radio.c/h&lt;/td&gt;
            &lt;td&gt;radio/radio.h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;ldl_radio_defs.h&lt;/td&gt;
            &lt;td&gt;radio/sx1272/sx1272.c/h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;ldl_chip.h&lt;/td&gt;
            &lt;td&gt;radio/sx1276/sx1276.c/h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;radio/sx1272/sx1272Regs-LoRa.h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;adio/sx1272/sx1272Regs-Fsk.h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;radio/sx1276/sx1276Regs-LoRa.h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;radio/sx1276/sx1276Regs-Fsk.h&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;caption&gt;Region Domain Files&lt;/caption&gt;
    &lt;theader&gt;
        &lt;tr&gt;
            &lt;th&gt;LDL&lt;/th&gt;
            &lt;th&gt;LoRaMac-Node&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;ldl_region.c/h&lt;/td&gt;
            &lt;td&gt;region/Region.c/h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;region/RegionCommon.c/h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;region/RegionEU868.c/h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;region/RegionUS915.c/h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;region/RegionEU433.c/h&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;region/RegionAU915.c/h&lt;/td&gt;
        &lt;/tr&gt;        
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;caption&gt;MAC Domain Files&lt;/caption&gt;
    &lt;theader&gt;
        &lt;tr&gt;
            &lt;th&gt;LDL&lt;/th&gt;
            &lt;th&gt;LoRaMac-Node&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;ldl_mac.c/h&lt;/td&gt;
            &lt;td&gt;mac/LoRaMac.c/h &lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;ldl_mac_commands.c/h&lt;/td&gt;
            &lt;td&gt;mac/LoRaMacCommands.c/h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;ldl_frame.c/h &lt;/td&gt;
            &lt;td&gt;mac/LoRaMacConfirmQueue.c/h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;ldl_ops.c/h&lt;/td&gt;
            &lt;td&gt;mac/LoRaMacSerializer.c/h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;ldl_sm.c/h&lt;/td&gt;
            &lt;td&gt;mac/LoRaMacAdr.c/h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;ldl_sm_internal.h &lt;/td&gt;
            &lt;td&gt;mac/LoRaMacParser.c/h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;ldl_stream.c/h &lt;/td&gt;
            &lt;td&gt;mac/LoRaMacCrypto.c/h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;ldl_system.c/h&lt;/td&gt;
            &lt;td&gt;system/timer.c/h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;peripherals/soft-se/soft-se.c/h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt; mac/LoRaMacHeaderTypes.h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;mac/LoRaMacTypes.h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;mac/secure-element.h&lt;/td&gt;
        &lt;/tr&gt;     
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;mac/LoRaMacTest.h&lt;/td&gt;
        &lt;/tr&gt;     
        
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The comparison excludes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;cryptographic implementations (AES-ECB, AES-CMAC, AES-CTR)&lt;/li&gt;
  &lt;li&gt;target specific code (e.g. hardware abstraction layer)&lt;/li&gt;
  &lt;li&gt;mismatched LoRaWAN features which are implemented in separate files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LoRaMac-Node implements more regions, radios, and modes than LDL. Where possible 
these extra features have been excluded in order to create a more like for like
comparison.&lt;/p&gt;

&lt;p&gt;Unfortunately not all mismatched features can be excluded. For example, 
LoRaMac-Node class C is inseparable from class A, while LDL only implements class A.
This difference means we should expect LoRaMac-Node to have more LoC and associated
scores.&lt;/p&gt;

&lt;p&gt;The table below gives a high-level view of the features implemented by
the files sorted into the domain tables above. Mismatched features
are indicated by a ‘yes’ in one column and a ‘no’ in the other.&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;Feature Matrix&lt;/caption&gt;
    &lt;theader&gt;
        &lt;tr&gt;
            &lt;th&gt;Domain&lt;/th&gt;
            &lt;th&gt;Feature&lt;/th&gt;
            &lt;th&gt;LDL&lt;/th&gt;
            &lt;th&gt;LoRaMac-Node&lt;/th&gt;
        &lt;/tr&gt;        
    &lt;/theader&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;MAC&lt;/td&gt;
            &lt;td&gt;Class A&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;MAC&lt;/td&gt;
            &lt;td&gt;Class C&lt;/td&gt;
            &lt;td class=&quot;table-danger&quot;&gt;no&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;MAC&lt;/td&gt;
            &lt;td&gt;LoRaWAN 1.1 key derivation and handling&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-danger&quot;&gt;no&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;MAC&lt;/td&gt;
            &lt;td&gt;OTAA&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;MAC&lt;/td&gt;
            &lt;td&gt;ABP&lt;/td&gt;
            &lt;td class=&quot;table-danger&quot;&gt;no&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;MAC&lt;/td&gt;
            &lt;td&gt;ADR&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;MAC&lt;/td&gt;
            &lt;td&gt;Confirmed/Unconfirmed Data&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;MAC&lt;/td&gt;
            &lt;td&gt;ioctl style access to all parameters&lt;/td&gt;
            &lt;td class=&quot;table-danger&quot;&gt;no&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td colspan=&quot;4&quot;&gt;&lt;/td&gt;            
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Radio&lt;/td&gt;
            &lt;td&gt;SX1272&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Radio&lt;/td&gt;
            &lt;td&gt;SX1276&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Radio&lt;/td&gt;
            &lt;td&gt;FSK Modulation&lt;/td&gt;
            &lt;td class=&quot;table-danger&quot;&gt;no&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;4&quot;&gt;&lt;/td&gt;            
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Region&lt;/td&gt;
            &lt;td&gt;EU_868_870&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;Region&lt;/td&gt;
            &lt;td&gt;EU_433&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;Region&lt;/td&gt;
            &lt;td&gt;US_902_928&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;        
        &lt;tr&gt;
            &lt;td&gt;Region&lt;/td&gt;
            &lt;td&gt;AU_915_928&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
            &lt;td class=&quot;table-success&quot;&gt;yes&lt;/td&gt;
        &lt;/tr&gt;        
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The tool &lt;a href=&quot;https://people.debian.org/~bame/pmccabe/overview.html&quot;&gt;pmccabe&lt;/a&gt; is used to measure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;apparent lines of code (includes comments and whitespace)&lt;/li&gt;
  &lt;li&gt;number of statements&lt;/li&gt;
  &lt;li&gt;number of functions&lt;/li&gt;
  &lt;li&gt;modified McCabe complexity (per function and per source file)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The higher the McCabe score, the more complicated the code. Functions with scores
above 10 are considered complicated.&lt;/p&gt;

&lt;p&gt;To determine compiled size, the source is compiled for an ARM Cortex M0+ using 
arm-none-aebi-gcc 8.2.1.  All compiler settings are in the &lt;a href=&quot;https://github.com/cjhdev/lorawan_comparison/blob/master/makefile&quot;&gt;makefile&lt;/a&gt;.
Size optimisation (-Os) is used in an effort to produce the smallest possible compiled size.&lt;/p&gt;

&lt;p&gt;The objects are grouped into archive files and the size of each archive is
determined using arm-none-aebi-size. The objects are not linked.&lt;/p&gt;

&lt;p&gt;Both projects are vendored into &lt;a href=&quot;https://github.com/cjhdev/lorawan_comparison&quot;&gt;this&lt;/a&gt; repository.
The tools pmccabe and gcc are orchestrated from &lt;a href=&quot;https://github.com/cjhdev/lorawan_comparison/blob/master/comparison.rb&quot;&gt;this&lt;/a&gt; script.&lt;/p&gt;

&lt;p&gt;Data is always presented in the order of LDL first.
LDL is plotted in blue, LoRaMac-Node is plotted in orange.&lt;/p&gt;

&lt;h2 id=&quot;overall-scores&quot;&gt;Overall Scores&lt;/h2&gt;

&lt;table&gt;&lt;caption&gt;LDL PMCCABE Results&lt;/caption&gt;&lt;header&gt;&lt;tr&gt;&lt;th&gt;Domain&lt;/th&gt;&lt;th&gt;LoC&lt;/th&gt;&lt;th&gt;Functions&lt;/th&gt;&lt;th&gt;Statements&lt;/th&gt;&lt;th&gt;Complexity&lt;/th&gt;&lt;/tr&gt;&lt;/header&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Mac&lt;/td&gt;&lt;td&gt;6933&lt;/td&gt;&lt;td&gt;149&lt;/td&gt;&lt;td&gt;1812&lt;/td&gt;&lt;td&gt;462&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Radio&lt;/td&gt;&lt;td&gt;1205&lt;/td&gt;&lt;td&gt;36&lt;/td&gt;&lt;td&gt;289&lt;/td&gt;&lt;td&gt;72&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Region&lt;/td&gt;&lt;td&gt;1127&lt;/td&gt;&lt;td&gt;24&lt;/td&gt;&lt;td&gt;418&lt;/td&gt;&lt;td&gt;83&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;9265&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;209&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;2519&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;617&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;table&gt;&lt;caption&gt;LoRaMAC-Node PMCCABE Results&lt;/caption&gt;&lt;header&gt;&lt;tr&gt;&lt;th&gt;Domain&lt;/th&gt;&lt;th&gt;LoC&lt;/th&gt;&lt;th&gt;Functions&lt;/th&gt;&lt;th&gt;Statements&lt;/th&gt;&lt;th&gt;Complexity&lt;/th&gt;&lt;/tr&gt;&lt;/header&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Mac&lt;/td&gt;&lt;td&gt;13798&lt;/td&gt;&lt;td&gt;189&lt;/td&gt;&lt;td&gt;3381&lt;/td&gt;&lt;td&gt;862&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Radio&lt;/td&gt;&lt;td&gt;8129&lt;/td&gt;&lt;td&gt;71&lt;/td&gt;&lt;td&gt;1358&lt;/td&gt;&lt;td&gt;345&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Region&lt;/td&gt;&lt;td&gt;9915&lt;/td&gt;&lt;td&gt;155&lt;/td&gt;&lt;td&gt;2347&lt;/td&gt;&lt;td&gt;512&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;31842&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;415&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;7086&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;1719&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lorawan_comparison/domain_loc.jpg&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lorawan_comparison/domain_functions.jpg&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lorawan_comparison/domain_statements.jpg&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lorawan_comparison/domain_complexity.jpg&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;function-complexity&quot;&gt;Function Complexity&lt;/h2&gt;

&lt;p&gt;Here I’ve plotted the frequency of function complexity scores for each domain.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lorawan_comparison/function_mac.jpg&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lorawan_comparison/function_radio.jpg&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lorawan_comparison/function_region.jpg&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;compiled-size&quot;&gt;Compiled Size&lt;/h2&gt;

&lt;table&gt;&lt;caption&gt;LDL Compiled Size&lt;/caption&gt;&lt;theader&gt;&lt;tr&gt;&lt;th&gt;Object File (from *.c)&lt;/th&gt;&lt;th&gt;Text (bytes)&lt;/th&gt;&lt;th&gt;BSS+Data (bytes)&lt;/th&gt;&lt;/tr&gt;&lt;/theader&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;ldl_region.o&lt;/td&gt;&lt;td&gt;1500&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ldl_radio.o&lt;/td&gt;&lt;td&gt;1437&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ldl_dummy_radio.o&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;16&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ldl_mac.o&lt;/td&gt;&lt;td&gt;7982&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ldl_mac_commands.o&lt;/td&gt;&lt;td&gt;782&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ldl_frame.o&lt;/td&gt;&lt;td&gt;888&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ldl_ops.o&lt;/td&gt;&lt;td&gt;1340&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ldl_sm.o&lt;/td&gt;&lt;td&gt;262&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ldl_stream.o&lt;/td&gt;&lt;td&gt;504&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ldl_system.o&lt;/td&gt;&lt;td&gt;18&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ldl_dummy_mac.o&lt;/td&gt;&lt;td&gt;36&lt;/td&gt;&lt;td&gt;992&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;14769&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;1008&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;table&gt;&lt;caption&gt;LoRaMAC-Node Compiled Size&lt;/caption&gt;&lt;theader&gt;&lt;tr&gt;&lt;th&gt;Object File (from *.c)&lt;/th&gt;&lt;th&gt;Text (bytes)&lt;/th&gt;&lt;th&gt;BSS+Data (bytes)&lt;/th&gt;&lt;/tr&gt;&lt;/theader&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Region.o&lt;/td&gt;&lt;td&gt;1372&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RegionAU915.o&lt;/td&gt;&lt;td&gt;2810&lt;/td&gt;&lt;td&gt;917&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RegionCommon.o&lt;/td&gt;&lt;td&gt;1184&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RegionEU433.o&lt;/td&gt;&lt;td&gt;2675&lt;/td&gt;&lt;td&gt;212&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RegionEU868.o&lt;/td&gt;&lt;td&gt;2883&lt;/td&gt;&lt;td&gt;292&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RegionUS915.o&lt;/td&gt;&lt;td&gt;3000&lt;/td&gt;&lt;td&gt;920&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sx1276.o&lt;/td&gt;&lt;td&gt;6092&lt;/td&gt;&lt;td&gt;284&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sx1272.o&lt;/td&gt;&lt;td&gt;5517&lt;/td&gt;&lt;td&gt;284&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoRaMac.o&lt;/td&gt;&lt;td&gt;12100&lt;/td&gt;&lt;td&gt;1644&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoRaMacCommands.o&lt;/td&gt;&lt;td&gt;608&lt;/td&gt;&lt;td&gt;256&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoRaMacConfirmQueue.o&lt;/td&gt;&lt;td&gt;580&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoRaMacSerializer.o&lt;/td&gt;&lt;td&gt;484&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoRaMacAdr.o&lt;/td&gt;&lt;td&gt;204&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoRaMacParser.o&lt;/td&gt;&lt;td&gt;334&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LoRaMacCrypto.o&lt;/td&gt;&lt;td&gt;2292&lt;/td&gt;&lt;td&gt;84&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;timer.o&lt;/td&gt;&lt;td&gt;530&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;soft-se.o&lt;/td&gt;&lt;td&gt;1040&lt;/td&gt;&lt;td&gt;968&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;43705&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;5907&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lorawan_comparison/flash_size.jpg&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lorawan_comparison/ram_size.jpg&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;</content><author><name>Cameron Harper</name></author><summary type="html">In this post I compare the apparent cyclomatic complexity and compiled size of two LoRaWAN implementations: LDL and LoRaMac-Node.</summary></entry><entry><title type="html">Conforming with LoRaWAN Fair Use Policies</title><link href="/2019/09/18/lorawan-easy-fairuse.html" rel="alternate" type="text/html" title="Conforming with LoRaWAN Fair Use Policies" /><published>2019-09-18T00:00:00+01:00</published><updated>2019-09-18T00:00:00+01:00</updated><id>/2019/09/18/lorawan-easy-fairuse</id><content type="html" xml:base="/2019/09/18/lorawan-easy-fairuse.html">&lt;p&gt;&lt;a href=&quot;https://www.thethingsnetwork.org/&quot;&gt;The Things Network&lt;/a&gt; (a LoRaWAN network provider with a free/community offering)
encourages its community users to meet a fair use policy.&lt;/p&gt;

&lt;p&gt;The policy is intended to prevent TTN users from overwhelming community provided gateways. 
The limit is set to no more than 30 seconds in 24 hours, so an effective duty cycle of 30/86400 (0.000347).&lt;/p&gt;

&lt;p&gt;One way to meet this limit is to design your application to
push data on a fixed interval calculated to not exceed the limit.&lt;/p&gt;

&lt;p&gt;But what if:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You want to push messages on demand&lt;/li&gt;
  &lt;li&gt;You want to adjust send interval to a changing data rate (because you use ADR)&lt;/li&gt;
  &lt;li&gt;You don’t want to implement extra logic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The solution is to make use of the global duty cycle limit setting present
in most LoRaWAN implementations.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/lorawan_duty_cycle.png&quot; alt=&quot;snippet&quot; /&gt;
&lt;em&gt;&lt;a href=&quot;https://lora-alliance.org/resource-hub/lorawanr-specification-v101&quot;&gt;https://lora-alliance.org/resource-hub/lorawanr-specification-v101&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This setting can be changed by the network using the DutyCycleReq command. 
On my &lt;a href=&quot;https://github.com/cjhdev/lora_device_lib&quot;&gt;implementation&lt;/a&gt; this 
setting can also be changed by the application through the 
LDL_MAC_setMaxDCycle() interface.&lt;/p&gt;

&lt;p&gt;The configuration item must be set to 12 in order to meet the TTN fair use policy.
This will limit maximum duty cycle to 1/4096 (0.000244). You may notice this
is more restrictive than what TTN requires, however this is as close as you can
get using this setting.&lt;/p&gt;

&lt;p&gt;Since the &lt;a href=&quot;https://github.com/cjhdev/lora_device_lib/tree/master/wrappers/arduino/output/arduino_ldl&quot;&gt;Arduino wrapper&lt;/a&gt; 
in my implementation is intended for use with TTN, I’ve added
the duty cycle limit as a default setting. The end result is that a sketch like this meets
both regional and fair use duty cycle limits regardless of data rate:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;arduino_ldl.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;lora_system_identity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;       
    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;lora_system_identity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appEUI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devEUI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x01U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x2bU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7eU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x15U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x16U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x28U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xaeU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xd2U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xa6U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xabU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf7U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x15U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x88U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x09U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xcfU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x4fU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3cU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;memcpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ArduinoLDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArduinoLDL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;get_identity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;       &lt;span class=&quot;cm&quot;&gt;/* specify name of function that returns euis and key */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EU_863_870&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;         &lt;span class=&quot;cm&quot;&gt;/* specify region */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LORA_RADIO_SX1272&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/* specify radio */&lt;/span&gt;    
        &lt;span class=&quot;n&quot;&gt;LORA_RADIO_PA_RFO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/* specify radio power amplifier */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;A0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                 &lt;span class=&quot;cm&quot;&gt;/* radio reset pin */&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                 &lt;span class=&quot;cm&quot;&gt;/* radio select pin */&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                  &lt;span class=&quot;cm&quot;&gt;/* radio dio0 pin */&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;                   &lt;span class=&quot;cm&quot;&gt;/* radio dio1 pin */&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;ArduinoLDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
    
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
        
            &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unconfirmedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                 
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         
            &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;otaa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;    
    
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;        
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Cameron Harper</name></author><summary type="html">The Things Network (a LoRaWAN network provider with a free/community offering) encourages its community users to meet a fair use policy.</summary></entry><entry><title type="html">LoRa Pulse Counter Demo</title><link href="/lpc" rel="alternate" type="text/html" title="LoRa Pulse Counter Demo" /><published>2019-08-23T00:00:00+01:00</published><updated>2019-08-23T00:00:00+01:00</updated><id>/lora-pulse-counter</id><content type="html" xml:base="/lpc">&lt;p&gt;This is my LoRaWAN enabled business card project.&lt;/p&gt;

&lt;p&gt;It’s a four-channel 2KHz impulse counter based on an STM32L051K8.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/third_pass_assembled.jpg&quot; alt=&quot;assembled board&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/third_pass_model.png&quot; alt=&quot;3d model&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/third_pass_model_back.png&quot; alt=&quot;3d model&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/top_crop_resize.jpg&quot; alt=&quot;in case&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/activity.jpg&quot; alt=&quot;profile&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hardware features include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;STM32L051K8 (64K flash, 8K RAM, Cortex M0+)&lt;/li&gt;
  &lt;li&gt;RFM95W (SX1276 based radio module from HopeRF)&lt;/li&gt;
  &lt;li&gt;dual SMA/UFL footprint&lt;/li&gt;
  &lt;li&gt;status button and LED indicator&lt;/li&gt;
  &lt;li&gt;UART with level converter&lt;/li&gt;
  &lt;li&gt;reverse cell protection&lt;/li&gt;
  &lt;li&gt;power supply for accessories (via “V+”)&lt;/li&gt;
  &lt;li&gt;surge protection&lt;/li&gt;
  &lt;li&gt;four inputs suitable for open-collector or dry-contact&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The firmware is currently occupying half of available flash. Features include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;low power operation (~2uA in stop mode)&lt;/li&gt;
  &lt;li&gt;bespoke &lt;a href=&quot;https://github.com/cjhdev/lora_device_lib&quot;&gt;LoRaWAN stack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#device-alarm&quot;&gt;device failure alarms&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;tickless application timers&lt;/li&gt;
  &lt;li&gt;XTAL fail-safe&lt;/li&gt;
  &lt;li&gt;32 bit counters stored in no-init volatile memory&lt;/li&gt;
  &lt;li&gt;count on rising/falling/both&lt;/li&gt;
  &lt;li&gt;alert on rising/falling/both/none&lt;/li&gt;
  &lt;li&gt;double-buffer configuration store with fail-safe defaults&lt;/li&gt;
  &lt;li&gt;multi-function &lt;a href=&quot;#status-button-and-led&quot;&gt;status button with LED indicator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#uart-protocol&quot;&gt;UART protocol&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;local and remote configuration/control via a common &lt;a href=&quot;#registers&quot;&gt;register&lt;/a&gt; system&lt;/li&gt;
  &lt;li&gt;hard fault diagnostics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Configuration items include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(per input)
    &lt;ul&gt;
      &lt;li&gt;pull-up/pull-down&lt;/li&gt;
      &lt;li&gt;polarity&lt;/li&gt;
      &lt;li&gt;rise-time (250us to 10s)&lt;/li&gt;
      &lt;li&gt;counter trigger (rising/falling/both)&lt;/li&gt;
      &lt;li&gt;alert trigger (none/rising/falling/both)&lt;/li&gt;
      &lt;li&gt;publish enable/disable&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;publish interval&lt;/li&gt;
  &lt;li&gt;LoRaWAN parameters&lt;/li&gt;
  &lt;li&gt;radio enabled/disabled&lt;/li&gt;
  &lt;li&gt;user defined serial number (device name)&lt;/li&gt;
  &lt;li&gt;low-battery level&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;pin-map&quot;&gt;Pin Map&lt;/h2&gt;

&lt;h3 id=&quot;inputs&quot;&gt;Inputs&lt;/h3&gt;

&lt;table style=&quot;font-size: 90%;&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;pin&lt;/th&gt;
      &lt;th&gt;signal&lt;/th&gt;
      &lt;th&gt;comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;V+&lt;/td&gt;
      &lt;td&gt;weak power supply / reference&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;channel 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;channel 2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;GND&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;V+&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;channel 3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;channel 4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;GND&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;uart&quot;&gt;UART&lt;/h3&gt;

&lt;p&gt;The pin layout is compatible with a large number of commercial USB-to-serial 
adapters:&lt;/p&gt;

&lt;table style=&quot;font-size: 90%;&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;pin&lt;/th&gt;
      &lt;th&gt;signal&lt;/th&gt;
      &lt;th&gt;comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;GND&lt;/td&gt;
      &lt;td&gt;mandatory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;CTS&lt;/td&gt;
      &lt;td&gt;connected to GND&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;VCC&lt;/td&gt;
      &lt;td&gt;mandatory 3V3 or 5V (this powers the level converter)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;TXD&lt;/td&gt;
      &lt;td&gt;transmit line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;RXD&lt;/td&gt;
      &lt;td&gt;receive line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;DTR&lt;/td&gt;
      &lt;td&gt;not connected&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;status-button-and-led&quot;&gt;Status Button and LED&lt;/h2&gt;

&lt;p&gt;The button has two actions depending on  how it is pressed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A short press will cause the status LED to blink the device status code.&lt;/li&gt;
  &lt;li&gt;A long press (&amp;gt;5s) will enable or disable joining mode (i.e. toggle the setting)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The status codes are as follows:&lt;/p&gt;

&lt;table style=&quot;font-size: 90%;&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;number of flashes&lt;/th&gt;
      &lt;th&gt;status&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;dead&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;joined and downlink received in interval&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;joined but no downlink received in interval&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;joining&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;not-joined&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;lorawan-message-format&quot;&gt;LoRaWAN Message Format&lt;/h2&gt;

&lt;table style=&quot;font-size: 90%;&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;direction&lt;/th&gt;
      &lt;th&gt;port&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;up&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#power-up&quot;&gt;power-up&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;up&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;config-publish&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;up&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#input-publish&quot;&gt;input-publish&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;up&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;input-alert&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;down&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#remote-write-register&quot;&gt;remote-write-register&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;power-up&quot;&gt;Power-Up&lt;/h3&gt;

&lt;p&gt;Sent once immediately after the first join-accept is received after system start.
If MCU state is available from the time of reset, this is included in the message.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Counter-Publish ::= SEQUENCE
{
    device-reset-reason BIT STRING (SIZE(8)) {
        wdt,
        hard-fault,
        power,
        user,
        reserved-5,
        reserved-6,
        reserved-7,
        reserved-8,
    },
    device-alarms BIT STRING (SIZE(8)) {
        clock-failure,
        low-battery,
        over-temperature,
        reserved-4,
        reserved-5,
        reserved-6,
        reserved-7,
        reserved-8
    },
    mcu-state SEQUENCE
    {        
        r0  INTEGER (0..4294967295),
        r1  INTEGER (0..4294967295),
        r2  INTEGER (0..4294967295),
        r3  INTEGER (0..4294967295),
        r12 INTEGER (0..4294967295),
        lr  INTEGER (0..4294967295),
        pc  INTEGER (0..4294967295),
        sr  INTEGER (0..4294967295)
        
    } OPTIONAL
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The encoding is &lt;a href=&quot;https://www.itu.int/rec/T-REC-X.696/en&quot;&gt;Octet Encoding Rules X.696&lt;/a&gt; with the following exceptions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OPTIONAL mcu-state presence is detected by size&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;input-publish&quot;&gt;Input-Publish&lt;/h3&gt;

&lt;p&gt;Sent every &lt;a href=&quot;#publish-interval&quot;&gt;publish-interval&lt;/a&gt;. The abstract structure is as follows:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Counter-Publish ::= SEQUENCE
{
    device-alarms BIT STRING (SIZE(8)) {
        clock-failure,
        low-battery,
        over-temperature,
        reserved-4,
        reserved-5,
        reserved-6,
        reserved-7,
        reserved-8
    },
    input-alarms BIT STRING (SIZE(8)) {
        input-1-active,
        input-2-active,
        input-3-active,
        input-4-active,
        reserved1,
        reserved2,
        reserved3,
        reserved4
    },
    counter-presence BIT STRING (SIZE(8)) {
        input-1-present,
        input-2-present,
        input-3-present,
        input-4-present,
        reserved-5,
        reserved-6,
        reserved-7,
        reserved-8,
    },    
    counter1 INTEGER (0..4294967295) OPTIONAL,
    counter2 INTEGER (0..4294967295) OPTIONAL,
    counter3 INTEGER (0..4294967295) OPTIONAL,
    counter4 INTEGER (0..4294967295) OPTIONAL  
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The encoding is &lt;a href=&quot;https://www.itu.int/rec/T-REC-X.696/en&quot;&gt;Octet Encoding Rules X.696&lt;/a&gt; with the following exceptions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OPTIONAL counter fields are included according to corresponding counter-presence bit being set&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;remote-write-register&quot;&gt;Remote-Write-Register&lt;/h3&gt;

&lt;p&gt;Works the same way as &lt;a href=&quot;#write-register&quot;&gt;Write-Register&lt;/a&gt;. Use to modify &lt;a href=&quot;#registers&quot;&gt;registers&lt;/a&gt; remotely.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Remote-Write-Register ::= SEQUENCE OF command SEQUENCE
{
    id INTEGER (0..65535),
    // register type
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Multiple commands can be packed into one message. &lt;a href=&quot;&quot;&gt;Config-Publish&lt;/a&gt; is
sent after processing a command regardless of success or failure.&lt;/p&gt;

&lt;h2 id=&quot;uart-protocol&quot;&gt;UART Protocol&lt;/h2&gt;

&lt;h3 id=&quot;uart-settings&quot;&gt;UART Settings&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;38400 baud&lt;/li&gt;
  &lt;li&gt;8 data bits, 1 stop bit, no parity&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;framing&quot;&gt;Framing&lt;/h3&gt;

&lt;p&gt;The protocol uses start, end, escape, and xor characters to mark start/end of 
messages and to remove start/end markers from the message payload.&lt;/p&gt;

&lt;p&gt;Special characters are as follows:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;start&lt;/td&gt;
      &lt;td&gt;0x7e&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;end&lt;/td&gt;
      &lt;td&gt;0x7f&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;escape&lt;/td&gt;
      &lt;td&gt;0x7d&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xor&lt;/td&gt;
      &lt;td&gt;0x20&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;When a start, end, or escape character appears within a message payload, it is replaced
by an escape character followed by the original character XORed with the xor character.&lt;/p&gt;

&lt;p&gt;The last two bytes of a frame is a 16 bit CRC ordered most significant byte first.
The CRC is calculated over the payload bytes prior to any escaping.&lt;/p&gt;

&lt;p&gt;CRC parameters are as follows:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;name&lt;/td&gt;
      &lt;td&gt;CRC-16-CCITT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;polynomial&lt;/td&gt;
      &lt;td&gt;0x1021&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;initial value&lt;/td&gt;
      &lt;td&gt;0xffff&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;reflect input&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;reflect output&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xor output&lt;/td&gt;
      &lt;td&gt;no&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;commands&quot;&gt;Commands&lt;/h3&gt;

&lt;p&gt;Commands are constructed as a sequence of a Command-Header
followed by a command specific argument. Similarly Responses
are constructed as a sequence of a Command-Header followed by
a response specific Argument.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Command-Header ::= [0] SEQUENCE 
{
    token   INTEGER (0..255),
    c-id    INTEGER (0..65535)
}

Response-Header ::= [1] SEQUENCE 
{
    token   INTEGER (0..255),
    c-id    INTEGER (0..65535)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;c-id&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0000&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#boot-or-app&quot;&gt;Boot-Or-App&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0001&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#goto-boot&quot;&gt;Goto-Boot&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0002&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#goto-app&quot;&gt;Goto-App&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0003&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#restart&quot;&gt;Restart&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0004&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#write-register&quot;&gt;Write-Register&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0005&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#read-register&quot;&gt;Read-Register&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Command/Response arguments are encoded according to &lt;a href=&quot;https://www.itu.int/rec/T-REC-X.696/en&quot;&gt;Octet Encoding Rules X.696&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;write-register&quot;&gt;Write-Register&lt;/h4&gt;

&lt;p&gt;Write a value to a &lt;a href=&quot;#registers&quot;&gt;register&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Command-Write-Register ::= SEQUENCE
{    
    id INTEGER (0..65535)
    // register type
}

Register-Access-Result ::= ENUMERATED {

    success,
    register-does-not-exist,
    access-denied,
    argument-error,
    range-error,
    not-authorised,
    temporary-failure        
}

Command-Write-Register :: SEQUENCE
{
    result Register-Access-Result
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;read-register&quot;&gt;Read-Register&lt;/h4&gt;

&lt;p&gt;Read a value from a &lt;a href=&quot;#registers&quot;&gt;register&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Command-Read-Register ::= SEQUENCE
{    
    id INTEGER (0..65535)
}

Command-Write-Register :: SEQUENCE
{
    result Register-Access-Result,
    // returned value
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;alerts&quot;&gt;Alerts&lt;/h3&gt;

&lt;p&gt;Alerts are constructed as a sequence of a Alert-Header
followed by an alert specific argument&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Alert-Header ::= [2] SEQUENCE 
{
    a-id    INTEGER (0..65535)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;a-id&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0000&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#unknown-message&quot;&gt;Unknown-Message&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0001&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#unknown-command&quot;&gt;Unknown-Command&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0002&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#invalid-command-argument&quot;&gt;Invalid-Command-Argument&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0010&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#log&quot;&gt;Log&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Alert arguments are encoded according to &lt;a href=&quot;https://www.itu.int/rec/T-REC-X.696/en&quot;&gt;Octet Encoding Rules X.696&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;unknown-message&quot;&gt;Unknown-Message&lt;/h4&gt;

&lt;p&gt;Pushed by device which has received a series of bytes which do
not match any expected patterns.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Alert-Unkown-Message ::= NULL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;unknown-command&quot;&gt;Unknown-Command&lt;/h4&gt;

&lt;p&gt;Pushed by a device which has decoded an unimplemented c-id.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Alert-Unknown-Command ::= SEQUENCE
{
    token INTEGER (0..255),
    c-id  INTEGER (0..65535)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;invalid-command-argument&quot;&gt;Invalid-Command-Argument&lt;/h4&gt;

&lt;p&gt;Pushed by a device which has decoded an invalid c-id specific argument.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Alert-Invalid-Command-Argument ::= SEQUENCE 
{
    token INTEGER (0..255),
    c-id  INTEGER (0..65535)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;log&quot;&gt;Log&lt;/h4&gt;

&lt;p&gt;Used to push logging messages to a client depending on the &lt;a href=&quot;#log-severity-level&quot;&gt;log severity level&lt;/a&gt;
setting.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;Alert-Log ::= SEQUENCE
{
    level   INTEGER (0..255),
    message VisibleString
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;registers&quot;&gt;Registers&lt;/h3&gt;

&lt;p&gt;Registers can be read and written by the &lt;a href=&quot;read-register&quot;&gt;Read-Register&lt;/a&gt; and &lt;a href=&quot;write-register&quot;&gt;Write-Register&lt;/a&gt;
commands. Access is role based according to read-group and write-group.&lt;/p&gt;

&lt;p&gt;Groups are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user&lt;/li&gt;
  &lt;li&gt;owner&lt;/li&gt;
  &lt;li&gt;lora&lt;/li&gt;
  &lt;li&gt;ALL (user|owner|lora)&lt;/li&gt;
&lt;/ul&gt;

&lt;table style=&quot;font-size: 80%; text-align: center;&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;read-group&lt;/th&gt;
      &lt;th&gt;write-group&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;type&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0000&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#log-severity-level&quot;&gt;log-severity-level&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0001&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#boot-version&quot;&gt;boot-version&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;OCTET STRING&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0002&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#app-version&quot;&gt;app-version&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;OCTET STRING&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0003&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#factory-id&quot;&gt;factory-id&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;OCTET STRING&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0004&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#vbat&quot;&gt;vbat&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..4294967295)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0005&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#ambient&quot;&gt;ambient&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..4294967295)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0006&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#low-vbat-threshold&quot;&gt;low-vbat-threshold&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..65535)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0007&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#device-name&quot;&gt;device-name&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;OCTET STRING(SIZE(0..36))&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0008&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#device-alarm&quot;&gt;device-alarm&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BIT STRING (SIZE(8))&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0100&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#dev-eui&quot;&gt;dev-eui&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;OCTET STRING (SIZE(8))&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0101&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#app-eui&quot;&gt;app-eui&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;OCTET STRING (SIZE(8))&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0102&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;owner&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#app-key&quot;&gt;app-key&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;OCTET STRING (SIZE(16))&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0103&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#enc-app-key&quot;&gt;enc-app-key&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;OCTET STRING (SIZE(16))&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0104&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#join-enabled&quot;&gt;join-enabled&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0105&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#tx-rate&quot;&gt;tx-rate&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0106&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#tx-power&quot;&gt;tx-power&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0107&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#adr-enabled&quot;&gt;adr-enabled&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0108&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#joined&quot;&gt;joined&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0200&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#countern&quot;&gt;counter1&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..4294967295)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0201&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#countern&quot;&gt;counter2&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..4294967295)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0202&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#countern&quot;&gt;counter3&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..4294967295)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0203&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#countern&quot;&gt;counter4&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..4294967295)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0204&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-polarity&quot;&gt;input1-polarity&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0205&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-polarity&quot;&gt;input2-polarity&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0206&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-polarity&quot;&gt;input3-polarity&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0207&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-polarity&quot;&gt;input4-polarity&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0208&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-pull&quot;&gt;input1-pull&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0209&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-pull&quot;&gt;input2-pull&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x020a&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-pull&quot;&gt;input3-pull&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x020b&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-pull&quot;&gt;input4-pull&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x020c&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-rise-time&quot;&gt;input1-rise-time&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x020d&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-rise-time&quot;&gt;input2-rise-time&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x020e&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-rise-time&quot;&gt;input3-rise-time&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x020f&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-rise-time&quot;&gt;input4-rise-time&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0210&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-alert-trigger&quot;&gt;input1-alert-trigger&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0211&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-alert-trigger&quot;&gt;input2-alert-trigger&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0212&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-alert-trigger&quot;&gt;input3-alert-trigger&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0213&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-alert-trigger&quot;&gt;input4-alert-trigger&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0214&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#&quot;&gt;input1-alert-lockout-interval&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0215&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#&quot;&gt;input2-alert-lockout-interval&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0216&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#&quot;&gt;input3-alert-lockout-interval&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0217&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#&quot;&gt;input4-alert-lockout-interval&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0218&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-publish-enable&quot;&gt;input1-publish-enabled&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0219&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-publish-enable&quot;&gt;input2-publish-enabled&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x021a&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-publish-enable&quot;&gt;input3-publish-enabled&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x021b&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-publish-enable&quot;&gt;input4-publish-enabled&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x021c&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#publish-interval&quot;&gt;publish-interval&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..65535)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x021d&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#&quot;&gt;alert-interval&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x021e&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-state&quot;&gt;input1-state&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x021f&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-state&quot;&gt;input2-state&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0220&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-state&quot;&gt;input3-state&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0221&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#inputn-state&quot;&gt;input4-state&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BOOLEAN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0222&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#countern-trigger&quot;&gt;counter1-trigger&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0223&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#countern-trigger&quot;&gt;counter2-trigger&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0224&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#countern-trigger&quot;&gt;counter3-trigger&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0x0225&lt;/td&gt;
      &lt;td&gt;ALL&lt;/td&gt;
      &lt;td&gt;owner|lora&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;#countern-trigger&quot;&gt;counter4-trigger&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;INTEGER(0..255)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;log-severity-level&quot;&gt;log-severity-level&lt;/h4&gt;

&lt;p&gt;The minimum level for log messages pushed by &lt;a href=&quot;#log&quot;&gt;Log alert&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;INTEGER(0..255) {

    emergency   (0),
    alert       (1),
    critical    (2),
    error       (3),
    warning     (4),
    notice      (5),
    info        (6),
    debug       (7)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;boot-version&quot;&gt;boot-version&lt;/h4&gt;

&lt;p&gt;Bootloader version string.&lt;/p&gt;

&lt;h4 id=&quot;app-version&quot;&gt;app-version&lt;/h4&gt;

&lt;p&gt;Application version string.&lt;/p&gt;

&lt;h4 id=&quot;factory-id&quot;&gt;factory-id&lt;/h4&gt;

&lt;p&gt;A read-only string unique to this LoRa Pulse Counter.&lt;/p&gt;

&lt;h4 id=&quot;vbat&quot;&gt;vbat&lt;/h4&gt;

&lt;p&gt;Battery voltage in millivolts.&lt;/p&gt;

&lt;h4 id=&quot;ambient&quot;&gt;ambient&lt;/h4&gt;

&lt;p&gt;Ambient temperature measured by integrated temperature sensor.&lt;/p&gt;

&lt;p&gt;This value is used internally to determine when the operating temperature
is outside of the recommended range.&lt;/p&gt;

&lt;h4 id=&quot;low-vbat-threshold&quot;&gt;low-vbat-threshold&lt;/h4&gt;

&lt;p&gt;When vbat is below this value the low-battery &lt;a href=&quot;#device-alarm&quot;&gt;device alarm&lt;/a&gt;
will be active.&lt;/p&gt;

&lt;h4 id=&quot;device-name&quot;&gt;device-name&lt;/h4&gt;

&lt;p&gt;A user assigned name to help with inventory management.&lt;/p&gt;

&lt;h4 id=&quot;ambient-offset&quot;&gt;ambient-offset&lt;/h4&gt;

&lt;p&gt;An offset correction applied to the ambient temperature measurement.&lt;/p&gt;

&lt;h4 id=&quot;device-alarm&quot;&gt;device-alarm&lt;/h4&gt;

&lt;p&gt;The device alarm field is used to indicate faults on the device:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;BIT STRING (SIZE(8)) {
    clock-failure       (0),
    low-battery         (1),
    over-temperature    (2),
    reserved-4          (3),
    wdt-reset           (4),
    hard-fault          (5),
    reserved-7          (6),
    reserved-8          (7)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;table style=&quot;font-size: 90%;&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;fault&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;clock-failure&lt;/td&gt;
      &lt;td&gt;device is unable to schedule precise time events&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;low-battery&lt;/td&gt;
      &lt;td&gt;battery requires replacement&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;over-temperature&lt;/td&gt;
      &lt;td&gt;ambient temperature is outside of the recommended window&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;power-reset&lt;/td&gt;
      &lt;td&gt;power supply was interrupted either by tamper or brown-out&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wdt-reset&lt;/td&gt;
      &lt;td&gt;firmware malfunction&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;dev-eui&quot;&gt;dev-eui&lt;/h4&gt;

&lt;p&gt;LoRaWAN device EUI.&lt;/p&gt;

&lt;h4 id=&quot;app-eui&quot;&gt;app-eui&lt;/h4&gt;

&lt;p&gt;LoRaWAN application EUI.&lt;/p&gt;

&lt;h4 id=&quot;app-key&quot;&gt;app-key&lt;/h4&gt;

&lt;p&gt;A write only register containing the LoRaWAN application key.&lt;/p&gt;

&lt;h4 id=&quot;enc-app-key&quot;&gt;enc-app-key&lt;/h4&gt;

&lt;p&gt;A read only register containing a zero block which has been encrypted
with app-key. This can be used to verify &lt;a href=&quot;#app-key&quot;&gt;app-key&lt;/a&gt; without revealing it.&lt;/p&gt;

&lt;h4 id=&quot;join-enabled&quot;&gt;join-enabled&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Write true to start the OTAA process.&lt;/li&gt;
  &lt;li&gt;Write false to forget the current network and prevent OTAA process&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tx-rate&quot;&gt;tx-rate&lt;/h4&gt;

&lt;p&gt;The rate setting to use when adr-enabled is set to false.&lt;/p&gt;

&lt;h4 id=&quot;tx-power&quot;&gt;tx-power&lt;/h4&gt;

&lt;p&gt;The power setting to use when adr-enabled is set to false.&lt;/p&gt;

&lt;h4 id=&quot;adr-enabled&quot;&gt;adr-enabled&lt;/h4&gt;

&lt;p&gt;Write ‘true’ to enable ADR or ‘false’ to disable ADR.&lt;/p&gt;

&lt;h4 id=&quot;joined&quot;&gt;joined&lt;/h4&gt;

&lt;p&gt;Read to determine if device is joined to a network.&lt;/p&gt;

&lt;h4 id=&quot;countern&quot;&gt;counter[n]&lt;/h4&gt;

&lt;p&gt;A 32 bit integer incremented according to &lt;a href=&quot;countern-trigger&quot;&gt;counter[n]-trigger&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Write any value to reset to zero.&lt;/p&gt;

&lt;h4 id=&quot;inputn-polarity&quot;&gt;input[n]-polarity&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;INTEGER(0..255) 
{
    low     (0),
    high    (1)  
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;inputn-pull&quot;&gt;input[n]-pull&lt;/h4&gt;

&lt;p&gt;Pull-up/down setting.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;INTEGER(0..255) 
{
    down    (0),
    up      (1)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;inputn-rise-time&quot;&gt;input[n]-rise-time&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;INTEGER(0..255) 
{
    none    (0),
    25ms    (1),
    250ms   (2),
    1000ms  (3),
    5000ms  (4),
    10000ms (5)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;inputn-alert-trigger&quot;&gt;input[n]-alert-trigger&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;INTEGER(0..255) 
{
    never                   (0),
    rising                  (1),
    falling                 (2),
    rising-falling          (3)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;countern-trigger&quot;&gt;counter[n]-trigger&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;#countern&quot;&gt;counter[n]&lt;/a&gt; is incremented according to this trigger.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-asn1&quot; data-lang=&quot;asn1&quot;&gt;INTEGER(0..255) 
{
    rising          (0),
    falling         (1),
    rising-falling  (2)
}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;publish-interval&quot;&gt;publish-interval&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;#input-publish&quot;&gt;Input-Publish&lt;/a&gt; is sent every publish-interval minutes.&lt;/p&gt;

&lt;h4 id=&quot;alert-interval&quot;&gt;alert-interval&lt;/h4&gt;</content><author><name>Cameron Harper</name></author><summary type="html">This is my LoRaWAN enabled business card project.</summary></entry><entry><title type="html">Living with mbed-cli</title><link href="/2019/08/06/dealing-with-mbed.html" rel="alternate" type="text/html" title="Living with mbed-cli" /><published>2019-08-06T00:00:00+01:00</published><updated>2019-08-06T00:00:00+01:00</updated><id>/2019/08/06/dealing-with-mbed</id><content type="html" xml:base="/2019/08/06/dealing-with-mbed.html">&lt;p&gt;MBED is neat but the mbed-cli tool is a pain (on Linux at least). 
This post is about how I get mbed-cli to work on my system.&lt;/p&gt;

&lt;h1 id=&quot;install-virtualenv-and-python&quot;&gt;Install Virtualenv and Python&lt;/h1&gt;

&lt;p&gt;mbed-cli at time of writing requires Python 2.7.&lt;/p&gt;

&lt;h1 id=&quot;create-an-app-folder&quot;&gt;Create an app folder&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;mkdir my_app
cd my_app&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;create-virtualenv-within-app-folder&quot;&gt;Create virtualenv within app folder&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;virualenv my_env --no-site-packages&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I found I had to use –no-site-packages because pip (later) was finding
some of the dependencies elsewhere on my system and not installing them
in the virtualenv, but then python doesn’t find them when it runs.&lt;/p&gt;

&lt;h1 id=&quot;activate-the-environment&quot;&gt;Activate the environment&lt;/h1&gt;

&lt;p&gt;virtualenv seems to need to be activated/deactivates, there is no “exec” type command.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;source my_env/bin/activate&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;install-mbed-cli-in-the-environment&quot;&gt;Install mbed-cli in the environment&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;pip install mbed-cli&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;init-the-project&quot;&gt;Init the project&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;mbed-cli new .&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;install-mbeds-dependencies&quot;&gt;Install mbed’s dependencies&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;cd mbed-os
pip install -r requirements.txt
cd -&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This step might happen first time you “mbed-cli compile” since I seem
to be experiencing an “auto-install” delay each time I run that command.&lt;/p&gt;

&lt;p&gt;The auto-install thing never seems to succeed so there is a painful delay
each time you use the tool.&lt;/p&gt;

&lt;h1 id=&quot;do-stuff&quot;&gt;Do stuff&lt;/h1&gt;

&lt;p&gt;Like compile:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;mbed-cli compile -t GCC_ARM -m NUCLEO_F429ZI&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;remember-to-deactivate-the-virtualenv-when-you-are-done&quot;&gt;Remember to deactivate the virtualenv when you are done&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;deactivate&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;i-find-it-useful-to-use-shell-scripts-for-common-commands&quot;&gt;I find it useful to use shell scripts for common commands&lt;/h1&gt;

&lt;p&gt;For example, you can activate/deactive the virtualenv for each 
command you wish to perform.&lt;/p&gt;

&lt;p&gt;e.g.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;/usr/bin/env bash
&lt;span class=&quot;go&quot;&gt;
source mbed-cli/bin/activate

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;mbed-cli compile -t GCC_ARM -m NUCLEO_F429ZI &quot;$&lt;/span&gt;@&lt;span class=&quot;s2&quot;&gt;&quot;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;
deactivate&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Cameron Harper</name></author><summary type="html">MBED is neat but the mbed-cli tool is a pain (on Linux at least). This post is about how I get mbed-cli to work on my system.</summary></entry><entry><title type="html">ruby_olm: Olm Double-Ratchet for Ruby</title><link href="/2018/11/27/ruby-wrapper-for-olm-double-ratchet.html" rel="alternate" type="text/html" title="ruby_olm: Olm Double-Ratchet for Ruby" /><published>2018-11-27T00:00:00+00:00</published><updated>2018-11-27T00:00:00+00:00</updated><id>/2018/11/27/ruby-wrapper-for-olm-double-ratchet</id><content type="html" xml:base="/2018/11/27/ruby-wrapper-for-olm-double-ratchet.html">&lt;p&gt;&lt;img src=&quot;/assets/double_ratchet.svg&quot; alt=&quot;Olm Double Ratchet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yesterday I finished a &lt;a href=&quot;https://github.com/cjhdev/ruby_olm&quot;&gt;Ruby wrapper&lt;/a&gt; for Olm. 
&lt;a href=&quot;https://git.matrix.org/git/olm/&quot;&gt;Olm&lt;/a&gt; is a protocol agnostic 
implementation of &lt;a href=&quot;https://en.wikipedia.org/wiki/Double_Ratchet_Algorithm&quot;&gt;Double Ratchet&lt;/a&gt; provided as part of the &lt;a href=&quot;https://matrix.org/blog/home/&quot;&gt;Matrix&lt;/a&gt; 
project. It’s nicely written, has been &lt;a href=&quot;https://www.nccgroup.trust/us/our-research/matrix-olm-cryptographic-review/&quot;&gt;audited&lt;/a&gt;, and is perhaps the
easiest to port library I’ve ever come across.&lt;/p&gt;

&lt;p&gt;Olm is useful if you want to build things that use Double-Ratchet. Coming 
from Matrix the main focus is on implementing chat clients, but you could
use this for other things like M2M/IoT.&lt;/p&gt;

&lt;p&gt;This is an example exchange between two parties using ruby_olm:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ruby_olm'&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RubyOlm&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;alice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bob&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Alice wants to send a message to Bob&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alice_msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hi bob&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Bob generates a one-time-key&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gen_otk&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Alice must have Bob's identity and one-time-key to make a session&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alice_session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;outbound_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ik&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'curve25519'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;otk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'curve25519'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Bob marks all one-time-keys as published&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mark_otk&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Alice can encrypt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alice_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alice_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assert_instance_of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PreKeyMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Bob can create a session from this first message&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bob_session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inbound_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Bob can now update his list of marked otk (since he knows one has been used)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update_otk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bob_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Bob can decrypt Alice's message&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bob_msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bob_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alice_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bob_msg&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# At this point Bob has received but Alice hasn't&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bob_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_received?&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;refute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alice_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_received?&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;####&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Bob can send messages back to Alice    &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bob_msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hi alice&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bob_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bob_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assert_instance_of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;alice_msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alice_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alice_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bob_msg&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And that’s it.&lt;/p&gt;</content><author><name>Cameron Harper</name></author><summary type="html"></summary></entry><entry><title type="html">LoraDeviceLib now works with MBED</title><link href="/2018/10/06/lora-device-lib-on-mbed.html" rel="alternate" type="text/html" title="LoraDeviceLib now works with MBED" /><published>2018-10-06T00:00:00+01:00</published><updated>2018-10-06T00:00:00+01:00</updated><id>/2018/10/06/lora-device-lib-on-mbed</id><content type="html" xml:base="/2018/10/06/lora-device-lib-on-mbed.html">&lt;p&gt;I recently completed an MBED wrapper for my &lt;a href=&quot;https://github.com/cjhdev/lora_device_lib_api&quot;&gt;LoRaWAN implementation&lt;/a&gt; (LDL). 
This follows on from the &lt;a href=&quot;/2018/08/23/build-your-own-experimental-lorawan-sensor.html&quot;&gt;Arduino wrapper&lt;/a&gt; I wrote about just a few months ago. 
I thought it would be an interesting point of comparison to see the same demo application implemented for MBED as was implemented for Arduino.&lt;/p&gt;

&lt;h2 id=&quot;application-requirements&quot;&gt;Application requirements&lt;/h2&gt;

&lt;p&gt;The requirements are the same as for the Arduino demo. The node shall power up, join &lt;a href=&quot;https://www.thethingsnetwork.org/&quot;&gt;The Things Network&lt;/a&gt;, then transmit
temperature and humidity every 30 minutes.&lt;/p&gt;

&lt;h2 id=&quot;hardware&quot;&gt;Hardware&lt;/h2&gt;

&lt;p&gt;I’m using an STM Nucleo F446RE board because that’s what I had in my parts bin. I’m combining that
with the same radio and sensor used for the Arduino demo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/mbed_sensor.jpg&quot; alt=&quot;assembled sensor&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;application-implementation&quot;&gt;Application implementation&lt;/h2&gt;

&lt;p&gt;The application code looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;mbed_ldl.h&quot;
#include &quot;DHT.h&quot;
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pending_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Semaphore&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sample_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pending_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pending_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sample_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sample_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;pending_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;    
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ticker&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample_ticker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPI&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DHT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DHT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DHT11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;devEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DEV_EUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APP_EUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APP_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MbedLDL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pending_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;        
        &lt;span class=&quot;n&quot;&gt;devEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;appEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;appKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;EU_863_870&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;         &lt;span class=&quot;cm&quot;&gt;/* region */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LORA_RADIO_SX1272&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/* radio */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;spi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                &lt;span class=&quot;cm&quot;&gt;/* SPI instance (possibly shared) */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;A0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                 &lt;span class=&quot;cm&quot;&gt;/* radio reset */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;D10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                &lt;span class=&quot;cm&quot;&gt;/* radio select */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;D2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                 &lt;span class=&quot;cm&quot;&gt;/* DIO0 */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;D3&lt;/span&gt;                  &lt;span class=&quot;cm&quot;&gt;/* DIO1 */&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setRate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setPower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                
 
    &lt;span class=&quot;n&quot;&gt;sample_ticker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attach_us&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30UL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60UL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000000UL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;pending_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
    
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
                
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0UL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DHT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SUCCESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                
                        &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;sensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; 
                            &lt;span class=&quot;n&quot;&gt;sensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getHumidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
                        
                        &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unconfirmedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        
                &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;otaa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The bulk of the application looks similar to the Arduino demo. The main difference is that the MBED
wrapper will notify the application by callback when an event is pending 
(i.e. when the application needs to call process())).&lt;/p&gt;

&lt;p&gt;The demo application uses this callback to release the &lt;em&gt;pending_flag&lt;/em&gt; semphore. 
The &lt;em&gt;pending_flag&lt;/em&gt; semaphore is also released by &lt;em&gt;sample_handler&lt;/em&gt; which is called every 30 minutes
by &lt;em&gt;sample_ticker&lt;/em&gt;. The main loop then waits on the &lt;em&gt;pending_flag&lt;/em&gt; and the effect is that the application will
sleep when there is no work to be done.&lt;/p&gt;

&lt;p&gt;Building the application using the mbed-cli tool produces the following output:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;mbed compile
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;lt;snip&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;
Link: mbed_ldl_sensor
Elf2Bin: mbed_ldl_sensor
| Module                       |         .text |       .data |        .bss |
|------------------------------|---------------|-------------|-------------|
| [fill]                       |     134(+134) |       4(+4) |     25(+25) |
| [lib]/c.a                    | 27885(+27885) | 2472(+2472) |     89(+89) |
| [lib]/gcc.a                  |   3272(+3272) |       0(+0) |       0(+0) |
| [lib]/misc                   |     208(+208) |     12(+12) |     28(+28) |
| environment_sensor.o         |   1402(+1402) |       4(+4) | 1140(+1140) |
| mbed-dht/DHT.o               |     722(+722) |       0(+0) |       0(+0) |
| mbed-os/components           |       96(+96) |       0(+0) |       0(+0) |
| mbed-os/drivers              |   2072(+2072) |       4(+4) |   144(+144) |
| mbed-os/hal                  |   2073(+2073) |       4(+4) |     68(+68) |
| mbed-os/platform             |   3472(+3472) |   276(+276) |   173(+173) |
| mbed-os/rtos                 |   9747(+9747) |   168(+168) | 6053(+6053) |
| mbed-os/targets              | 15129(+15129) |       4(+4) | 1132(+1132) |
| mbed_ldl/lora_aes.o          |     835(+835) |       0(+0) |       0(+0) |
| mbed_ldl/lora_board.o        |       34(+34) |       0(+0) |       0(+0) |
| mbed_ldl/lora_cmac.o         |     560(+560) |       0(+0) |       0(+0) |
| mbed_ldl/lora_event.o        |     512(+512) |       0(+0) |       0(+0) |
| mbed_ldl/lora_frame.o        |   1654(+1654) |       0(+0) |       0(+0) |
| mbed_ldl/lora_mac.o          |   4354(+4354) |       0(+0) |       0(+0) |
| mbed_ldl/lora_mac_commands.o |     656(+656) |       0(+0) |       0(+0) |
| mbed_ldl/lora_radio.o        |   1247(+1247) |       0(+0) |       0(+0) |
| mbed_ldl/lora_region.o       |   1114(+1114) |       0(+0) |       0(+0) |
| mbed_ldl/lora_stream.o       |     106(+106) |       0(+0) |       0(+0) |
| mbed_ldl/mbed_ldl.o          |   1231(+1231) |       4(+4) |     32(+32) |
| Subtotals                    | 78515(+78515) | 2952(+2952) | 8884(+8884) |
Total Static RAM memory (data + bss): 11836(+11836) bytes
Total Flash memory (text + data): 81467(+81467) bytes&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;LDL appears to occupy around 11K bytes of flash memory and this includes run-time support 
for multiple regions and radios.&lt;/p&gt;

&lt;p&gt;RAM usage is no more than 1140 bytes in bss and some of that will be taken up by the other
objects in the demo application.&lt;/p&gt;

&lt;h2 id=&quot;flashing-and-running-the-demo&quot;&gt;Flashing and running the demo&lt;/h2&gt;

&lt;p&gt;The MBED wrapper will print status information to the terminal as it runs. 
You can compile the application, flash the target, and open a terminal using the following
mbed-cli command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;mbed compile &lt;span class=&quot;nt&quot;&gt;--flash&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--sterm&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;lt;snip&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;
[mbed] Detecting connected targets/boards to your system...
[mbed] Opening serial terminal to &quot;NUCLEO_F446RE&quot;
--- Terminal on /dev/ttyACM2 - 9600,8,N,1 ---
[94]RESET
[21736]STARTUP
[60061482]TX_BEGIN: SZ=23 F=868300000 SF=7 BW=125 P=5
[60123557]TX_COMPLETE
[65118809]RX1_SLOT: F=868300000 SF=7 BW=125
[65196647]DOWNSTREAM: SZ=33 RSSI=-66 SNR=9
[65239633]JOIN_COMPLETE
[65287790]TX_BEGIN: SZ=21 F=867900000 SF=7 BW=125 P=5
[65344750]TX_COMPLETE
[66344194]RX1_SLOT: F=867900000 SF=7 BW=125
[67314471]RX2_SLOT: F=869525000 SF=9 BW=125
[67358533]DATA_COMPLETE
[1800023429]TX_BEGIN: SZ=21 F=867100000 SF=7 BW=125 P=5
[1800080384]TX_COMPLETE
[1801079827]RX1_SLOT: F=867100000 SF=7 BW=125
[1802050106]RX2_SLOT: F=869525000 SF=9 BW=125
[1802096183]DATA_COMPLETE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At the same time we can see activity on The Things Network console:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/mbed_sensor_console.png&quot; alt=&quot;sensor console&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nice.&lt;/p&gt;</content><author><name>Cameron Harper</name></author><summary type="html">I recently completed an MBED wrapper for my LoRaWAN implementation (LDL). This follows on from the Arduino wrapper I wrote about just a few months ago. I thought it would be an interesting point of comparison to see the same demo application implemented for MBED as was implemented for Arduino.</summary></entry><entry><title type="html">Ask HN: Who was hiring?</title><link href="/2018/09/21/who-was-hiring.html" rel="alternate" type="text/html" title="Ask HN: Who was hiring?" /><published>2018-09-21T00:00:00+01:00</published><updated>2018-09-21T00:00:00+01:00</updated><id>/2018/09/21/who-was-hiring</id><content type="html" xml:base="/2018/09/21/who-was-hiring.html">&lt;p&gt;This post is about techniques you can use to collect old “Who is hiring?” content
from Hacker News.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/who_is_hiring.png&quot; alt=&quot;who is hiring thread&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-hacker-news&quot;&gt;What is Hacker News?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/&quot;&gt;Hacker News&lt;/a&gt; is a Reddit style website run by US based startup incubator &lt;a href=&quot;http://www.ycombinator.com/&quot;&gt;Y Combinator&lt;/a&gt;.
Users submit content (usually tech related news) and other users vote the content up or down.&lt;/p&gt;

&lt;p&gt;My favourite recurring story is the monthly &lt;a href=&quot;https://www.google.com/search?q=site%3Anews.ycombinator.com+%22Who+is+hiring%3F%22&quot;&gt;“Who is hiring?”&lt;/a&gt; 
where tech
companies from around the world post links to current vacancies. These
ads are interesting since they are posted by internal recruiters and
are usually transparent in terms of who the company is and what they do.&lt;/p&gt;

&lt;h2 id=&quot;why-look-at-old-stories&quot;&gt;Why look at old stories?&lt;/h2&gt;

&lt;p&gt;If you are looking for a job it makes sense to look at the most recent posts, 
but I find old posts interesting as well since:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Those companies might still be hiring&lt;/li&gt;
  &lt;li&gt;The posts give some insight (through the HN lens) as to what the 
job market is like in a particular city&lt;/li&gt;
  &lt;li&gt;I can see what kind of technologies companies are using&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;getting-links-to-stories&quot;&gt;Getting links to stories&lt;/h2&gt;

&lt;p&gt;Before you can download historical “Who is hiring?” content you need to 
find links to the stories. This Ruby script does just that using the Google
search API:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rest-client'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  
    &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;RestClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.googleapis.com/customsearch/v1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;:params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;key: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;redacted&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
          &lt;span class=&quot;ss&quot;&gt;cx: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;redacted&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
          &lt;span class=&quot;ss&quot;&gt;dateRestrict: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;y5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
          &lt;span class=&quot;ss&quot;&gt;start: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;q: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Ask HN: Who is Hiring&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
      &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'items'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/Ask HN: Who is hiring\? \([a-zA-Z]+ [0-9]+\)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    
        &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'link'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'queries'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nextPage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'startIndex'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;STDERR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pretty_generate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I’m searching for the exact phrase “Ask HN: Who is hiring?” using 
a custom search engine configured to only search HN. The search
results are limited to the last five years. I’m also using some regex
to make sure I don’t collect links for meta stories.&lt;/p&gt;

&lt;p&gt;Google returns 10 results per page and (at time of writing) will never return more than 10 pages 
regardless of how many results there are. The script will loop until an exception is encountered;
for me this is a non-successful response code to the request for the 11th page of results.&lt;/p&gt;

&lt;p&gt;This is how I run the script:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ruby search.rb &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; links.json&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;getting-the-content&quot;&gt;Getting the content&lt;/h2&gt;

&lt;p&gt;Once you have the links, you can use the &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;HN API&lt;/a&gt; to get the content. This is my script:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'restclient'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'logger'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;STDERR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;RQ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;

  &lt;span class=&quot;no&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  
    &lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  
      &lt;span class=&quot;n&quot;&gt;rq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;
      
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rq&lt;/span&gt;      
      
      &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
      
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;no&quot;&gt;RestClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://hacker-news.firebaseio.com/v0/item/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;rq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; returned a NULL object&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; failed but will try again (&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
       
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  
    &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;
  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;finished writing&quot;&lt;/span&gt;    
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_json&lt;/span&gt;
    
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ARGV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;rq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/id=(?&amp;lt;item&amp;gt;[0-9]+)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'link'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;getting '&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'...&quot;&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;getting &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'kids'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; posts&quot;&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'kids'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;all done&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The script gets each story object and then uses that information to get all 
of the top level posts.&lt;/p&gt;

&lt;p&gt;The HN API seems to take around 1s to answer a request and doesn’t return collections.
This means if a story contains 1000 top level posts, it will take ~16 minutes to get them all if you
only use one thread of execution. To speed this up my script uses a pool of worker threads. I assume 
this isn’t a burden for the host since it’s Firebase and every app using this API will need
to do a lot of IO.&lt;/p&gt;

&lt;p&gt;The script must not be left running unattended since failed requests are re-queued regardless of the type 
of failure. This is a lazy solution to recovering from the occasional socket related temporary failure.&lt;/p&gt;

&lt;p&gt;Running the script produces STDERR terminal output that looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ruby get.rb links.json &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; posts.json
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:20:48.334370 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : getting &lt;span class=&quot;s1&quot;&gt;'Ask HN: Who is hiring? (August 2018) | Hacker News'&lt;/span&gt;...
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:20:49.000806 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : getting 918 posts
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:20:49.025621 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : getting &lt;span class=&quot;s1&quot;&gt;'Ask HN: Who is hiring? (July 2018) | Hacker News'&lt;/span&gt;...
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:20:53.952558 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : 17664917 returned a NULL object
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:01.930408 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : getting 776 posts
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:01.932161 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : getting &lt;span class=&quot;s1&quot;&gt;'Ask HN: Who is hiring? (June 2018) | Hacker News'&lt;/span&gt;...
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:08.996272 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : 17493081 returned a NULL object
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:12.678740 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : getting 796 posts
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:12.690395 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : getting &lt;span class=&quot;s1&quot;&gt;'Ask HN: Who is hiring? (May 2018) | Hacker News'&lt;/span&gt;...
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:23.509626 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : getting 1033 posts
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:23.514804 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : getting &lt;span class=&quot;s1&quot;&gt;'Ask HN: Who is hiring? (March 2018) | Hacker News'&lt;/span&gt;...
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:30.793308 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : 16987633 returned a NULL object
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:34.502299 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : 16969165 returned a NULL object
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:36.262272 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : 16970062 failed but will try again &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SSL_connect SYSCALL &lt;span class=&quot;nv&quot;&gt;returned&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5 &lt;span class=&quot;nv&quot;&gt;errno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 &lt;span class=&quot;nv&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;unknown state&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;I, [2018-09-03T12:21:37.664146 #&lt;/span&gt;859]  INFO &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; : getting 909 posts
&lt;span class=&quot;c&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It took me around 10 minutes to return ~40,000 top level posts from the past 5 years.&lt;/p&gt;

&lt;h2 id=&quot;filter-by-keyword&quot;&gt;Filter by keyword&lt;/h2&gt;

&lt;p&gt;Once you have all the posts from the previous step you can process them any way you like. 
I decided to filter the results by keywords and create human readable lists.&lt;/p&gt;

&lt;p&gt;This is my keyword filter:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;ss&quot;&gt;:all&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:downcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uniq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:downcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uniq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:none&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:downcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uniq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Regexp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Regexp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Regexp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;escape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Regexp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IGNORECASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;

  &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      
        &lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:downcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uniq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
          
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt;
            
              &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;
              
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
            
          &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
          
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The script scans for a union of keywords in the post and returns the results as an array. 
I use this array to accept/reject the post based on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;keywords which must all be present (all)&lt;/li&gt;
  &lt;li&gt;keywords where one or more must present (any)&lt;/li&gt;
  &lt;li&gt;keywords which must not be present (none)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I print the filtered posts in reverse-chronological order with HTML formatting converted to plain-text using this script:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'time'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'html_to_plain_text'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;put_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; results&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'time'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'by'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://news.ycombinator.com/user?id=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'by'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'time'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HtmlToPlainText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plain_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
    
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The filter and print scripts are implemented as methods so they can be
parametrised with different keywords like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;london_c.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;w&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;put_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ARGV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
      &lt;span class=&quot;ss&quot;&gt;all: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%w(london)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;any: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%w(c c++ c/c++ firmware embedded)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;berlin_ruby.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;w&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;put_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ARGV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
      &lt;span class=&quot;ss&quot;&gt;all: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%w(berlin ruby)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And so on.&lt;/p&gt;

&lt;h2 id=&quot;finally&quot;&gt;Finally&lt;/h2&gt;

&lt;p&gt;If you are actively looking for work on HN I recommend &lt;a href=&quot;https://hnhired.com/&quot;&gt;this&lt;/a&gt; app
since it more or less does what my scripts do but in your browser and for the most recent month.&lt;/p&gt;</content><author><name>Cameron Harper</name></author><summary type="html">This post is about techniques you can use to collect old “Who is hiring?” content from Hacker News.</summary></entry><entry><title type="html">Build Your Own Experimental LoRaWAN Sensor</title><link href="/2018/08/23/build-your-own-experimental-lorawan-sensor.html" rel="alternate" type="text/html" title="Build Your Own Experimental LoRaWAN Sensor" /><published>2018-08-23T00:00:00+01:00</published><updated>2018-08-23T00:00:00+01:00</updated><id>/2018/08/23/build-your-own-experimental-lorawan-sensor</id><content type="html" xml:base="/2018/08/23/build-your-own-experimental-lorawan-sensor.html">&lt;p&gt;I wrote an Arduino wrapper for my &lt;a href=&quot;https://github.com/cjhdev/lora_device_lib_api&quot;&gt;LoRaWAN implementation&lt;/a&gt;. 
This post shows how to use it in an experimental application.&lt;/p&gt;

&lt;p&gt;Note that even though the wrapper is very easy to use, you should not 
use it unless you know what you are doing. This includes knowing if you 
are allowed to do this where you live, and how much trouble you might
get into if you interfere with other radio users.&lt;/p&gt;

&lt;h2 id=&quot;the-application&quot;&gt;The Application&lt;/h2&gt;

&lt;p&gt;Lately it’s been hot in Britain. Too hot. I want to know how hot it is.&lt;/p&gt;

&lt;p&gt;To do this I will run a sensor in my home that measures temperature
and humidity every 30 minutes. The sensor will be mains powered and will
use LoRaWAN to push the data to The Things Network (&lt;a href=&quot;https://www.thethingsnetwork.org/&quot;&gt;TTN&lt;/a&gt;).
I will then collect the data and store it in a CSV file on my PC.&lt;/p&gt;

&lt;h2 id=&quot;the-hardware&quot;&gt;The Hardware&lt;/h2&gt;

&lt;p&gt;For this project I’m using an Adafruit Metro (ATMEGA328) configured for 3V3 operation, 
a Semtech SX1272MB2DAS shield, and a DHT11 sensor. The Semtech shield 
has a CE mark and comes with an antenna.&lt;/p&gt;

&lt;p&gt;The hardware plugs together like so:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/sensor.jpg&quot; alt=&quot;assembled sensor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For a gateway I have a Multitech Conduit AP. If you are &lt;a href=&quot;https://www.thethingsnetwork.org/map&quot;&gt;lucky&lt;/a&gt; you might not need one.&lt;/p&gt;

&lt;h2 id=&quot;the-firmware&quot;&gt;The Firmware&lt;/h2&gt;

&lt;p&gt;I wrote the following ino 
to meet my application requirements:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define DEBUG_LEVEL 2
#include &quot;src/arduino_ldl/arduino_ldl.h&quot;
#include &quot;src/Grove_Temperature_And_Humidity_Sensor/DHT.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;devEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROGMEM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROGMEM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROGMEM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x2bU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7eU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x15U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x16U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x28U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xaeU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xd2U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xa6U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xabU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf7U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x15U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x88U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x09U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xcfU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x4fU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3cU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push_interval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30UL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60UL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000UL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push_timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ArduinoLDL&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;devEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;appEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;appKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;EU_863_870&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;         &lt;span class=&quot;cm&quot;&gt;/* specify region */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LORA_RADIO_SX1272&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/* specify radio */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                 &lt;span class=&quot;cm&quot;&gt;/* radio reset pin */&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                 &lt;span class=&quot;cm&quot;&gt;/* radio select pin */&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                  &lt;span class=&quot;cm&quot;&gt;/* radio dio0 pin */&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;                   &lt;span class=&quot;cm&quot;&gt;/* radio dio1 pin */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;DHT&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                  &lt;span class=&quot;cm&quot;&gt;/* pin */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DHT11&lt;/span&gt;               &lt;span class=&quot;cm&quot;&gt;/* sensor type */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;expired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;millis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;    
    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UINT32_MAX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT32_MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115200U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;            
    
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setRate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setPower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
    
        &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;push_timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;millis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push_interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
    
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
            
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                
                &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;dht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;dht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readHumidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
                
                &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unconfirmedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                
                &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    
            &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;otaa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;            
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Compiling in the Arduino environment produces the following message:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;Sketch uses 22158 bytes (68%) of program storage space. Maximum is 32256 bytes.
Global variables use 684 bytes (33%) of dynamic memory, leaving 1364 bytes for local variables. Maximum is 2048 bytes.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There’s still a bit of code space for extra features.&lt;/p&gt;

&lt;p&gt;RAM usage seems OK but keep in mind that ldl.process() will use the stack
to store the downstream frame, various keys, and a shadow instance of 
the session parameters. You probably need at least 500 bytes free to ensure 
the wheels don’t fall off.&lt;/p&gt;

&lt;h2 id=&quot;firmware-explanation&quot;&gt;Firmware Explanation&lt;/h2&gt;

&lt;h3 id=&quot;includes&quot;&gt;Includes&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define DEBUG_LEVEL 2
#include &quot;src/arduino_ldl/arduino_ldl.h&quot;
#include &quot;src/Grove_Temperature_And_Humidity_Sensor/DHT.h&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here the preprocessor is used to include the ArduinoLDL header.&lt;/p&gt;

&lt;p&gt;Defining DEBUG_LEVEL before the include will enable a set of inline 
diagnostic messages. Level 1 gives a summary of state transitions, 
level 2 also includes parameters.&lt;/p&gt;

&lt;p&gt;The DHT11 library header is needed to interface with the temperature and
humidity sensor.&lt;/p&gt;

&lt;h3 id=&quot;mandatory-lorawan-parameters&quot;&gt;Mandatory LoRaWAN Parameters&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;devEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROGMEM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROGMEM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROGMEM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x2bU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7eU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x15U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x16U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x28U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xaeU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xd2U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xa6U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xabU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf7U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x15U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x88U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x09U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xcfU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x4fU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3cU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;These byte strings are required to connect to TTN. 
TTN has plenty of resource explaining the purpose of these strings and 
where they come from so I won’t explain here.&lt;/p&gt;

&lt;p&gt;These aren’t the values I actually used. What you see here is just filler.&lt;/p&gt;

&lt;p&gt;The PROGMEM attribute is a quirky thing needed on AVR to ensure strings
end up in flash memory rather than SRAM.&lt;/p&gt;

&lt;h3 id=&quot;arduinoldl-construction&quot;&gt;ArduinoLDL Construction&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;ArduinoLDL&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;devEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;appEUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;appKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;EU_863_870&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;         &lt;span class=&quot;cm&quot;&gt;/* specify region */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LORA_RADIO_SX1272&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/* specify radio */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                 &lt;span class=&quot;cm&quot;&gt;/* radio reset pin */&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                 &lt;span class=&quot;cm&quot;&gt;/* radio select pin */&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                  &lt;span class=&quot;cm&quot;&gt;/* radio dio0 pin */&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;                   &lt;span class=&quot;cm&quot;&gt;/* radio dio1 pin */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The constructor
caches the settings but doesn’t perform any initialisation.
Initialisation is done later in &lt;a href=&quot;#setup&quot;&gt;setup()&lt;/a&gt; by ldl.begin().&lt;/p&gt;

&lt;p&gt;The two-step pattern is slightly awkward solution to two problems:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The static object is constructed before the Arduino environment is 
initialised (so you should avoid touching the Arduino interfaces)&lt;/li&gt;
  &lt;li&gt;The core implementation needs a pointer to the ArduinoLDL instance (which is not
possible to know in the constructor)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;dht11-construction&quot;&gt;DHT11 Construction&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;DHT&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                  &lt;span class=&quot;cm&quot;&gt;/* pin */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DHT11&lt;/span&gt;               &lt;span class=&quot;cm&quot;&gt;/* sensor type */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here an instance of the sensor object is constructed by specifying 
the pin the sensor is connected to, and the hardware variant.&lt;/p&gt;

&lt;h3 id=&quot;application-timer&quot;&gt;Application Timer&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push_interval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30UL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60UL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000UL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push_timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// snip&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;expired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;millis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;    
    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UINT32_MAX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT32_MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This code is used in &lt;a href=&quot;#loop&quot;&gt;loop()&lt;/a&gt; to generate a push
event every 30 minutes based on the Arduino millisecond counter.&lt;/p&gt;

&lt;h3 id=&quot;setup&quot;&gt;setup()&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115200U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;                
    
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setRate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setPower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This function is called once from Arduino main() after the 
environment is initialised but before &lt;a href=&quot;#loop&quot;&gt;loop()&lt;/a&gt; is called.&lt;/p&gt;

&lt;p&gt;Serial must be initialised to support the optional ArduinoLDL diagnostic messages.
DHT and ArduinoLDL instances must also be initialised here by calling their begin() 
methods.&lt;/p&gt;

&lt;p&gt;After initialisation the rate and power settings can be adjusted. I recommend using the 
lowest transmit power and spreading factor you can get away with.&lt;/p&gt;

&lt;p&gt;The meaning of these integers changes depending on which region
you specify in the ArduinoLDL constructor. You can read about it in the 
&lt;a href=&quot;https://lora-alliance.org/lorawan-for-developers&quot;&gt;LoRaWAN Regional Parameters&lt;/a&gt; companion specification.&lt;/p&gt;

&lt;h3 id=&quot;loop&quot;&gt;loop()&lt;/h3&gt;

&lt;p&gt;Loop is called repeatedly from Arduino main().&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
    
        &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;push_timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;millis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push_interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
    
        &lt;span class=&quot;c1&quot;&gt;// snip&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;            
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Three things happen at the base of the loop:&lt;/p&gt;

&lt;p&gt;First there is a check for if the application timer has expired. If it has, the 
push flag is set and push_timer is reset to the next interval.&lt;/p&gt;

&lt;p&gt;Next there is a check for if ArduinoLDL is ready. ArduinoLDL must be ready before
it will initiate a join or send data. ArduinoLDL is ready when:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;chip initialisation is complete, and&lt;/li&gt;
  &lt;li&gt;there are no active operations (e.g. transmit/receive in progress), and&lt;/li&gt;
  &lt;li&gt;a channel is available&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally ldl.process() is called to make ArduinoLDL process events.&lt;/p&gt;

&lt;p&gt;Drilling into the ldl.ready() branch:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
    
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// snip&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    
            &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;otaa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When ArduinoLDL is ready but not joined to the network, it will attempt
to join using ‘over the air activation’.&lt;/p&gt;

&lt;p&gt;If ldl.otaa() completes successfully, ldl.joined() will return true, which will
open up this branch:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
            
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                
                &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;dht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;dht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readHumidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
                
                &lt;span class=&quot;n&quot;&gt;ldl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unconfirmedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                
                &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If the push flag is set, the firmware reads the sensor and sends the data
using the unconfirmed data service on port 1.&lt;/p&gt;

&lt;p&gt;The push flag is cleared after initiating the send. This ensures
the send will not occur again until ArduinoLDL is ready and the application
timer has expired.&lt;/p&gt;

&lt;h2 id=&quot;serial-monitor-and-ttn-console&quot;&gt;Serial Monitor and TTN Console&lt;/h2&gt;

&lt;p&gt;Running the sensor for two hours will produce serial monitor 
output which looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;[520]RESET
[11936]STARTUP
[60304716]TX_BEGIN: SZ=23 F=868500000 SF=7 BW=125 P=5
[60367124]TX_COMPLETE
[65342284]RX1_SLOT: F=868500000 SF=7 BW=125
[65443864]DOWNSTREAM: SZ=33 RSSI=-62 SNR=10
[65450208]JOIN_COMPLETE
[65981800]TX_BEGIN: SZ=21 F=867300000 SF=7 BW=125 P=5
[66039092]TX_COMPLETE
[67034196]RX1_SLOT: F=867300000 SF=7 BW=125
[68016644]RX2_SLOT: F=869525000 SF=9 BW=125
[68054048]DATA_COMPLETE
[1800531712]TX_BEGIN: SZ=21 F=868300000 SF=7 BW=125 P=5
[1800588980]TX_COMPLETE
[1801584120]RX1_SLOT: F=868300000 SF=7 BW=125
[1802566600]RX2_SLOT: F=869525000 SF=9 BW=125
[1802603968]DATA_COMPLETE
[3600531348]TX_BEGIN: SZ=21 F=867100000 SF=7 BW=125 P=5
[3600588612]TX_COMPLETE
[3601583756]RX1_SLOT: F=867100000 SF=7 BW=125
[3602566244]RX2_SLOT: F=869525000 SF=9 BW=125
[3602603608]DATA_COMPLETE
[1105564436]TX_BEGIN: SZ=21 F=868100000 SF=7 BW=125 P=5
[1105621700]TX_COMPLETE
[1106616840]RX1_SLOT: F=868100000 SF=7 BW=125
[1107599316]RX2_SLOT: F=869525000 SF=9 BW=125
[1107636680]DATA_COMPLETE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You should also be able to see activity on the TTN console:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/sensor_console.png&quot; alt=&quot;sensor console&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;collecting-data-from-ttn&quot;&gt;Collecting Data from TTN&lt;/h2&gt;

&lt;p&gt;I had originally planned to use the TTN 
&lt;a href=&quot;https://www.thethingsnetwork.org/docs/applications/http/&quot;&gt;HTTP integration&lt;/a&gt;
to POST upstream messages to a Google Sheet. This didn’t work
as expected and proved too difficult to debug in the time available.&lt;/p&gt;

&lt;p&gt;I decided instead to use the &lt;a href=&quot;https://www.thethingsnetwork.org/docs/applications/mqtt/&quot;&gt;MQTT interface&lt;/a&gt;. 
One useful feature of this protocol is that the client can receive 
messages from behind NAT. This means you can get started with something
simple running on your PC, like this program I wrote in Ruby:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mqtt'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'base64'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;MQTT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'eu.thethings.network'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;ss&quot;&gt;:port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8883&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:ssl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'environment-sensor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'this-should-be-the-application-key'&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;environment-sensor/devices/+/up&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
  
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;time,dev_id,hardware_serial,temperature,humidity&quot;&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
    &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;humidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'payload_raw'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'metadata'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'time'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dev_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hardware_serial'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;humidity&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The program subscribes to upstream messages from all devices in my ‘environment-sensor’
application. Received messages are unpacked and printed to stdout in CSV format.&lt;/p&gt;

&lt;p&gt;Running the program and the sensor at the same time should produce output 
that looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ruby listen.rb
&lt;span class=&quot;go&quot;&gt;time,dev_id,hardware_serial,temperature,humidity
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;2018-08-17T10:21:51.616432507Z,sensor1,&amp;lt;redacted&amp;gt;&lt;/span&gt;,24.0,52.0
&lt;span class=&quot;gp&quot;&gt;2018-08-17T10:50:44.766045205Z,sensor1,&amp;lt;redacted&amp;gt;&lt;/span&gt;,24.0,52.0
&lt;span class=&quot;gp&quot;&gt;2018-08-17T11:20:43.282121472Z,sensor1,&amp;lt;redacted&amp;gt;&lt;/span&gt;,24.0,50.0
&lt;span class=&quot;gp&quot;&gt;2018-08-17T11:50:41.809375253Z,sensor1,&amp;lt;redacted&amp;gt;&lt;/span&gt;,24.0,48.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And that’s it.&lt;/p&gt;</content><author><name>Cameron Harper</name></author><summary type="html">I wrote an Arduino wrapper for my LoRaWAN implementation. This post shows how to use it in an experimental application.</summary></entry><entry><title type="html">Using Ruby to Emulate LoRaWAN Hardware</title><link href="/2018/03/11/using-ruby-to-emulate-lorawan-hardware.html" rel="alternate" type="text/html" title="Using Ruby to Emulate LoRaWAN Hardware" /><published>2018-03-11T00:00:00+00:00</published><updated>2018-03-11T00:00:00+00:00</updated><id>/2018/03/11/using-ruby-to-emulate-lorawan-hardware</id><content type="html" xml:base="/2018/03/11/using-ruby-to-emulate-lorawan-hardware.html">&lt;p&gt;For the past year I’ve been working on a background project called &lt;a href=&quot;https://github.com/cjhdev/lora_device_lib_api&quot;&gt;LoraDeviceLib&lt;/a&gt; (LDL for short).&lt;/p&gt;

&lt;p&gt;Since this is not my day job, I’ve been focusing on the parts of the problem that interest me (the MAC layer) and avoiding anything that seems tedious (buying a gateway, setting up a gateway, debugging radio/hardware related problems, complaining about late kickstarter projects).&lt;/p&gt;

&lt;p&gt;To make this work, I’ve been exercising all features on my development machine using small tests with varying degrees of mocking vs. integration. This is effective up until the point where all the parts are ready to come together to talk to a network service. For me, I got to this point at the beginning of the year when I was ready to start talking to &lt;a href=&quot;https://www.thethingsnetwork.org&quot;&gt;The Things Network&lt;/a&gt; (TTN).&lt;/p&gt;

&lt;p&gt;To continue with my “no hardware” approach, I decided to write a software layer in Ruby that would emulate the hardware components required to connect a free-running instance of LDL up to TTN. Basically, everything in the box marked “emulator”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/high_level.png&quot; alt=&quot;emulator classes&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;implementation&quot;&gt;Implementation&lt;/h1&gt;

&lt;p&gt;The emulator is not one complete program, rather a collection of classes that are composed into a scenario. The classes developed for the emulator live &lt;a href=&quot;&quot;&gt;here&lt;/a&gt; and everything is arranged in the usual Rubygems &lt;a href=&quot;http://guides.rubygems.org/make-your-own-gem/&quot;&gt;pattern&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The classes developed for the emulator look a bit like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/emulator.png&quot; alt=&quot;emulator classes&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ExtMAC is a native extension (Ruby written in C) that wraps up LDL.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MAC is a pure Ruby subclass that extends and improves the basic interfaces in ExtMAC. Native extensions are more difficult to write and maintain than pure
Ruby so this pattern helps to keep ExtMAC simple.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Device combines a MAC and a Radio to emulate a LoRaWAN device. It runs an application which is passed in as a block upon initialisation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Radio contains the minimum amount of logic required to send and receive LoRaWAN frames via an instance of Broker. It can detect overlapping transmit and receive windows but doesn’t go so far as to simulate the effect of distance and obstacles on signal quality.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gateway is a fully functional LoRaWAN gateway. It implements the Semtech forwarder protocol to connect up to TTN. To avoid dealing with configuration, the gateway will send and receive frames on any frequency. Also, since I’m not simulating radio, every frame relayed upstream has perfect signal quality.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Clock implements a event queue which drives Device and Gateway instances. It ensures that system time stands still until an event is complete. This means that timing sensitive code in LDL is never late even if the garbage collector kicks in.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;FrameLogger logs radio frames which it subscribes to via Broker. It includes a packet dissector built from another native extension (not shown).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Broker implements publish/subscribe messaging used to pass frames and events.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;running-a-scenario&quot;&gt;Running a Scenario&lt;/h1&gt;

&lt;p&gt;The first thing I wanted to try on the emulator was a scenario in which the device would join and then send and receive data. In bullet point form:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;device starts&lt;/li&gt;
  &lt;li&gt;device joins&lt;/li&gt;
  &lt;li&gt;device sends a short unique message upstream as often as duty cycle limits permit&lt;/li&gt;
  &lt;li&gt;while running, device receives downstream messages in the receive slots&lt;/li&gt;
  &lt;li&gt;device prints messages to the terminal as it runs so we can see what is happening&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Implemented as a scenario:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ldl'&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LDL&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CompositeLogger&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;STDOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;formatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LOG_FORMATTER&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sev_threshold&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;INFO&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SystemTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;broker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Broker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;FrameLogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;broker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'frame.log'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gateway&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Gateway&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;broker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EUI64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GATEWAY_EUI&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; 
    &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gateway'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;broker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;ss&quot;&gt;devEUI: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EUI64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DEV_EUI&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;appEUI: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EUI64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;APP_EUI&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; 
    &lt;span class=&quot;ss&quot;&gt;appKey: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;APP_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; 
    &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;device&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;on_receive&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;port&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
          
  &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;   
      
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;joining...&quot;&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;
    
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;join complete&quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    
    &lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    
      &lt;span class=&quot;no&quot;&gt;SystemTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ticksUntilNextChannel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sending message '&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' to port &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;...&quot;&lt;/span&gt;
  
      &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
      
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;send complete&quot;&lt;/span&gt;
      
      &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      
  &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JoinTimeout&lt;/span&gt;            
  
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;join failed&quot;&lt;/span&gt;
      
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SystemTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gateway&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Interrupt&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LDL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SystemTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gateway&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Running the scenario for a few seconds produces the following lines on the terminal:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;ruby &lt;span class=&quot;nt&quot;&gt;-Ilib&lt;/span&gt; examples/one_device_one_gateway.rb
&lt;span class=&quot;go&quot;&gt;joining...
INFO  [2018-03-10 00:16:37]        231 gateway: sending PullData (keep alive)
INFO  [2018-03-10 00:16:37]       2263 gateway: received PullAck
INFO  [2018-03-10 00:16:37]       5780 gateway: received frame
INFO  [2018-03-10 00:16:37]       5836 gateway: sending PushData (forward)
INFO  [2018-03-10 00:16:37]       5836 gateway: received PushAck
INFO  [2018-03-10 00:16:41]     100014 gateway: received PullResp
INFO  [2018-03-10 00:16:41]     100014 gateway: transmit frame in 4057660us (tmst=5057800)
INFO  [2018-03-10 00:16:41]     100014 gateway: send up TXAck (error=NONE)
INFO  [2018-03-10 00:16:42]     505780 gateway: transmitting frame
INFO  [2018-03-10 00:16:42]     512460 device: received message
join complete
sending message '0' to port 1...
INFO  [2018-03-10 00:16:42]     516707 gateway: received frame
INFO  [2018-03-10 00:16:42]     516796 gateway: sending PushData (forward)
INFO  [2018-03-10 00:16:42]     516796 gateway: received PushAck
INFO  [2018-03-10 00:16:42]     516796 gateway: received PullResp
INFO  [2018-03-10 00:16:42]     516796 gateway: transmit frame in 999110us (tmst=6167070)
INFO  [2018-03-10 00:16:42]     516796 gateway: send up TXAck (error=NONE)
INFO  [2018-03-10 00:16:43]     616707 gateway: transmitting frame
INFO  [2018-03-10 00:16:43]     621340 device: received message
port1: hello
send complete
sending message '1' to port 1...
INFO  [2018-03-10 00:16:43]     625547 gateway: received frame
INFO  [2018-03-10 00:16:43]     625617 gateway: sending PushData (forward)
INFO  [2018-03-10 00:16:43]     625617 gateway: received PushAck
send complete
sending message '2' to port 1...
INFO  [2018-03-10 00:16:46]     928837 gateway: received frame
INFO  [2018-03-10 00:16:46]     928897 gateway: sending PushData (forward)
INFO  [2018-03-10 00:16:46]     928897 gateway: received PushAck
send complete
sending message '3' to port 1...
INFO  [2018-03-10 00:16:48]    1133042 gateway: received frame
INFO  [2018-03-10 00:16:48]    1133125 gateway: sending PushData (forward)
INFO  [2018-03-10 00:16:48]    1133125 gateway: received PushAck
send complete
sending message '4' to port 1...
INFO  [2018-03-10 00:16:50]    1340969 gateway: received frame
INFO  [2018-03-10 00:16:50]    1341054 gateway: sending PushData (forward)
INFO  [2018-03-10 00:16:50]    1341054 gateway: received PushAck
send complete
sending message '5' to port 1...
INFO  [2018-03-10 00:16:52]    1545174 gateway: received frame
INFO  [2018-03-10 00:16:52]    1545245 gateway: sending PushData (forward)
INFO  [2018-03-10 00:16:52]    1545245 gateway: received PushAck
send complete&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The following CSV format lines are logged by FrameLogger:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;frame.log
&lt;span class=&quot;go&quot;&gt;system_time, eui, message_type, frequency, spreading_factor, bandwidth, power, air_time, size, message
0.00123, 75-0A-FA-1F-8F-01-57-8C, JoinReq, 868300000, 7, 125, 0, 0.05657, 23, AJRFAPB+1bNwjFcBjx/6CnUhYsMTQI8=
5.0578, EA-15-79-3E-11-2C-7F-93, JoinAccept, 868300000, 7, 125, 0, 0.06681, 33, IN7FEkE2/DzEr4ofNWbrMAiSxmxW7LdiGwzQWW3pcUqI
5.12586, 75-0A-FA-1F-8F-01-57-8C, UnconfirmedDataUp, 867700000, 7, 125, 0, 0.04121, 14, QBknASYAAAABU523sLo=
6.16707, EA-15-79-3E-11-2C-7F-93, UnconfirmedDataDown, 867700000, 7, 125, 0, 0.04633, 18, YBknASYAAAABA/v+WucSM4Z1
6.21426, 75-0A-FA-1F-8F-01-57-8C, UnconfirmedDataUp, 868500000, 7, 125, 0, 0.04121, 14, QBknASYAAQABtYpgU6Q=
9.24716, 75-0A-FA-1F-8F-01-57-8C, UnconfirmedDataUp, 867900000, 7, 125, 0, 0.04121, 14, QBknASYAAgABrhd/ihw=
11.28921, 75-0A-FA-1F-8F-01-57-8C, UnconfirmedDataUp, 868300000, 7, 125, 0, 0.04121, 14, QBknASYAAwABwOB/BJo=
13.36848, 75-0A-FA-1F-8F-01-57-8C, UnconfirmedDataUp, 867100000, 7, 125, 0, 0.04121, 14, QBknASYABAABK/zPSX4=
15.41053, 75-0A-FA-1F-8F-01-57-8C, UnconfirmedDataUp, 868100000, 7, 125, 0, 0.04121, 14, QBknASYABQAB4PZJfdY=&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can see the same thing on the TTN data console:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ttn_console.png&quot; alt=&quot;emulator classes&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;was-it-worth-the-trouble&quot;&gt;Was It Worth The Trouble?&lt;/h1&gt;

&lt;p&gt;Yes. It’s just as useful as I thought it would be.&lt;/p&gt;

&lt;p&gt;The emulator helps me to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try out complete instances of LDL against TTN without any physical setup&lt;/li&gt;
  &lt;li&gt;Iterate through development/debug cycles just as quickly as a non-embedded software project&lt;/li&gt;
  &lt;li&gt;Conserve the ISM band by not blasting out useless “hello world” messages&lt;/li&gt;
  &lt;li&gt;Run LDL in different regions (LoRaWAN works differently in EU compared to US, for example)&lt;/li&gt;
  &lt;li&gt;Setup automated end-to-end tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s not perfect. There are plenty of wrinkles and missing features, the most obvious being that the emulator doesn’t simulate the effect of distance and obstacles on radio signals. 
This means that at this time it’s not useful for debugging ADR or for observing the effect of many devices and gateways operating in the same space.&lt;/p&gt;</content><author><name>Cameron Harper</name></author><summary type="html">For the past year I’ve been working on a background project called LoraDeviceLib (LDL for short).</summary></entry></feed>